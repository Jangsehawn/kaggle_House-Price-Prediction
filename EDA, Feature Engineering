# kaggle_House-Price-Prediction{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# House Price Prediction"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-------\n",
    "------"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 0. data 불러오기\n",
    "\n",
    "## 1) feature 설명\n",
    "\n",
    "- ID : 집을 구분하는 번호\n",
    "- date : 집을 구매한 날짜\n",
    "- price : 집의 가격(Target variable)\n",
    "- bedrooms : 침실의 수\n",
    "- bathrooms : 화장실의 수\n",
    "- sqft_living : 주거 공간의 평방 피트(면적)\n",
    "- sqft_lot : 부지의 평방 피트(면적)\n",
    "- floors : 집의 층 수\n",
    "- waterfront : 집의 전방에 강이 흐르는지 유무 (a.k.a. 리버뷰)\n",
    "- view : 집이 얼마나 좋아 보이는지의 정도\n",
    "- condition : 집의 전반적인 상태\n",
    "- grade : King County grading 시스템 기준으로 매긴 집의 등급\n",
    "- sqft_above : 지하실을 제외한 평방 피트(면적)\n",
    "- sqft_basement : 지하실의 평방 피트(면적)\n",
    "- yr_built : 지어진 년도\n",
    "- yr_renovated : 집을 재건축한 년도\n",
    "- zipcode : 우편번호\n",
    "- lat : 위도\n",
    "- long : 경도\n",
    "- sqft_living15 : 2015년 기준 주거 공간의 평방 피트(면적, 집을 재건축했다면, 변화가 있을 수 있음)\n",
    "- sqft_lot15 : 2015년 기준 부지의 평방 피트(면적, 집을 재건축했다면, 변화가 있을 수 있음)\n",
    "\n",
    "----"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2) read data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "      <th>price</th>\n",
       "      <th>bedrooms</th>\n",
       "      <th>bathrooms</th>\n",
       "      <th>sqft_living</th>\n",
       "      <th>sqft_lot</th>\n",
       "      <th>floors</th>\n",
       "      <th>waterfront</th>\n",
       "      <th>view</th>\n",
       "      <th>...</th>\n",
       "      <th>grade</th>\n",
       "      <th>sqft_above</th>\n",
       "      <th>sqft_basement</th>\n",
       "      <th>yr_built</th>\n",
       "      <th>yr_renovated</th>\n",
       "      <th>zipcode</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>sqft_living15</th>\n",
       "      <th>sqft_lot15</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>20141013T000000</td>\n",
       "      <td>221900.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1180</td>\n",
       "      <td>5650</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>1180</td>\n",
       "      <td>0</td>\n",
       "      <td>1955</td>\n",
       "      <td>0</td>\n",
       "      <td>98178</td>\n",
       "      <td>47.5112</td>\n",
       "      <td>-122.257</td>\n",
       "      <td>1340</td>\n",
       "      <td>5650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>20150225T000000</td>\n",
       "      <td>180000.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.00</td>\n",
       "      <td>770</td>\n",
       "      <td>10000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>6</td>\n",
       "      <td>770</td>\n",
       "      <td>0</td>\n",
       "      <td>1933</td>\n",
       "      <td>0</td>\n",
       "      <td>98028</td>\n",
       "      <td>47.7379</td>\n",
       "      <td>-122.233</td>\n",
       "      <td>2720</td>\n",
       "      <td>8062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>20150218T000000</td>\n",
       "      <td>510000.0</td>\n",
       "      <td>3</td>\n",
       "      <td>2.00</td>\n",
       "      <td>1680</td>\n",
       "      <td>8080</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>8</td>\n",
       "      <td>1680</td>\n",
       "      <td>0</td>\n",
       "      <td>1987</td>\n",
       "      <td>0</td>\n",
       "      <td>98074</td>\n",
       "      <td>47.6168</td>\n",
       "      <td>-122.045</td>\n",
       "      <td>1800</td>\n",
       "      <td>7503</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>20140627T000000</td>\n",
       "      <td>257500.0</td>\n",
       "      <td>3</td>\n",
       "      <td>2.25</td>\n",
       "      <td>1715</td>\n",
       "      <td>6819</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>1715</td>\n",
       "      <td>0</td>\n",
       "      <td>1995</td>\n",
       "      <td>0</td>\n",
       "      <td>98003</td>\n",
       "      <td>47.3097</td>\n",
       "      <td>-122.327</td>\n",
       "      <td>2238</td>\n",
       "      <td>6819</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>20150115T000000</td>\n",
       "      <td>291850.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1.50</td>\n",
       "      <td>1060</td>\n",
       "      <td>9711</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>1060</td>\n",
       "      <td>0</td>\n",
       "      <td>1963</td>\n",
       "      <td>0</td>\n",
       "      <td>98198</td>\n",
       "      <td>47.4095</td>\n",
       "      <td>-122.315</td>\n",
       "      <td>1650</td>\n",
       "      <td>9711</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   id             date     price  bedrooms  bathrooms  sqft_living  sqft_lot  \\\n",
       "0   0  20141013T000000  221900.0         3       1.00         1180      5650   \n",
       "1   1  20150225T000000  180000.0         2       1.00          770     10000   \n",
       "2   2  20150218T000000  510000.0         3       2.00         1680      8080   \n",
       "3   3  20140627T000000  257500.0         3       2.25         1715      6819   \n",
       "4   4  20150115T000000  291850.0         3       1.50         1060      9711   \n",
       "\n",
       "   floors  waterfront  view  ...  grade  sqft_above  sqft_basement  yr_built  \\\n",
       "0     1.0           0     0  ...      7        1180              0      1955   \n",
       "1     1.0           0     0  ...      6         770              0      1933   \n",
       "2     1.0           0     0  ...      8        1680              0      1987   \n",
       "3     2.0           0     0  ...      7        1715              0      1995   \n",
       "4     1.0           0     0  ...      7        1060              0      1963   \n",
       "\n",
       "   yr_renovated  zipcode      lat     long  sqft_living15  sqft_lot15  \n",
       "0             0    98178  47.5112 -122.257           1340        5650  \n",
       "1             0    98028  47.7379 -122.233           2720        8062  \n",
       "2             0    98074  47.6168 -122.045           1800        7503  \n",
       "3             0    98003  47.3097 -122.327           2238        6819  \n",
       "4             0    98198  47.4095 -122.315           1650        9711  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train = pd.read_csv('./train.csv')\n",
    "test = pd.read_csv('./test.csv')\n",
    "train.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "------"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3) 문제 정의\n",
    "\n",
    "- id와 price를 제외한 19개의 feature<font color=\"red\">**(X)**</font>로\n",
    "- continuous한 price<font color=\"red\">**(y)**</font>를 예측하는 regression task\n",
    "- metric은 RMSE를 사용\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4) the number of data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train\t: 15035\n",
      "test\t: 6468\n"
     ]
    }
   ],
   "source": [
    "print('train\\t: '+str(len(train)))\n",
    "print('test\\t: '+str(len(pd.read_csv('./test.csv'))))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-----\n",
    "-----"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 1. EDA\n",
    "\n",
    "## 1) null data 확인\n",
    "\n",
    "- null data는 없다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 15035 entries, 0 to 15034\n",
      "Data columns (total 21 columns):\n",
      "id               15035 non-null int64\n",
      "date             15035 non-null object\n",
      "price            15035 non-null float64\n",
      "bedrooms         15035 non-null int64\n",
      "bathrooms        15035 non-null float64\n",
      "sqft_living      15035 non-null int64\n",
      "sqft_lot         15035 non-null int64\n",
      "floors           15035 non-null float64\n",
      "waterfront       15035 non-null int64\n",
      "view             15035 non-null int64\n",
      "condition        15035 non-null int64\n",
      "grade            15035 non-null int64\n",
      "sqft_above       15035 non-null int64\n",
      "sqft_basement    15035 non-null int64\n",
      "yr_built         15035 non-null int64\n",
      "yr_renovated     15035 non-null int64\n",
      "zipcode          15035 non-null int64\n",
      "lat              15035 non-null float64\n",
      "long             15035 non-null float64\n",
      "sqft_living15    15035 non-null int64\n",
      "sqft_lot15       15035 non-null int64\n",
      "dtypes: float64(5), int64(15), object(1)\n",
      "memory usage: 2.4+ MB\n"
     ]
    }
   ],
   "source": [
    "train.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "----------\n",
    "\n",
    "## 2) duplicated 확인"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "duplicated data : 0\n"
     ]
    }
   ],
   "source": [
    "print('duplicated data : '+str(len(train[train.duplicated()])))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "------\n",
    "\n",
    "## 3) target distribution 확인\n",
    "\n",
    "### 1> 통계 정보 확인 (describe)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    1.503500e+04\n",
       "mean     5.406827e+05\n",
       "std      3.715247e+05\n",
       "min      7.800000e+04\n",
       "25%      3.220000e+05\n",
       "50%      4.500000e+05\n",
       "75%      6.450000e+05\n",
       "max      7.700000e+06\n",
       "Name: price, dtype: float64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train['price'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count      15035\n",
       "mean      540682\n",
       "std       371524\n",
       "min        78000\n",
       "25%       322000\n",
       "50%       450000\n",
       "75%       645000\n",
       "max      7700000\n",
       "Name: price, dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train['price'].describe().map(int)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2> 분포 확인 (distplot)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x2498e2eff08>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "sns.distplot(train['price'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "추후 normal distribution를 따라야 쓸 수 있는 모델을 사용할 수 있으므로 최대한 normal distribution이 될 수 있도록 scale 조정해본다.\n",
    "\n",
    "\n",
    "- What? price가 큰 쪽으로 outlier가 존재하니 log scaling을 시도한다.\n",
    "- How? 왜도와 첨도를 점검\n",
    "\n",
    "**첨도 (kurtosis / kurtosis)** : \n",
    "- 첨도 값 (K)이 3에 가까울 경우, scatter은 정규 분포에 가깝습니다.\n",
    "- (K <3), 분포가 정규 분포보다 더 평탄하게 평탄하다고 판단 할 수 있으며, \n",
    "- 첨도가 3보다 큰 양수인 경우 (K> 3), 분포가보다 뾰족한 분포로 간주 할 수 있습니다.\n",
    "\n",
    "**왜도** : \n",
    "- 자료가 좌우 대칭일 경우 왜도가 0이 됩니다. \n",
    "- 오른쪽 꼬리가 길수록 값이 더 큽니다."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4> log scaling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "from scipy import stats\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize = (10,7))\n",
    "\n",
    "fig.add_subplot(1,2,1)\n",
    "res = stats.probplot(train['price'], plot=plt)\n",
    "\n",
    "fig.add_subplot(1,2,2)\n",
    "res = stats.probplot(np.log1p(train['price']), plot=plt)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "original Kurtosis: 40.154919\n",
      "original Skewness: 4.290252\n",
      "log-scaled Kurtosis: 0.731605\n",
      "log-scaled Skewness: 0.433099\n"
     ]
    }
   ],
   "source": [
    "print(\"original Kurtosis: %f\" % train['price'].kurt())\n",
    "print(\"original Skewness: %f\" % train['price'].skew())\n",
    "print(\"log-scaled Kurtosis: %f\" % np.log1p(train['price']).kurt())\n",
    "print(\"log-scaled Skewness: %f\" % np.log1p(train['price']).skew())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x2498eac4208>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(np.log1p(train['price']))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "----\n",
    "\n",
    "## 4) feature distribution 확인\n",
    "\n",
    "### distribution 확인 전에 생각해본 내용\n",
    "\n",
    "- date의 경우 yyyy-mm-dd + T000000의 형태로 저희가 필요한 부분은 앞의 8자리 입니다.\n",
    "- 왜 bedrooms는 float인가?\n",
    "- 재건축과 관련된 feature (yr_renovated, sqft_living15, sqft_lot15) (yr_built)\n",
    "- zipcode는 어떤 관계가 있을까?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 0> distribution 확인\n",
    "\n",
    "#### Categorical Variable (Qualitative)\n",
    "\n",
    "- Nominal Data\n",
    "\n",
    "    - 원칙적으로 숫자로 표시할 수 없으나, 편의상 숫자화. (순위의 개념이 없음) 예시) 남자-0, 여자-1 \n",
    "\n",
    "- Ordinal Data\n",
    "\n",
    "    - 원칙적으로 숫자로  표시할 수 없으나, 편의상 숫자화. (순위의 개념이 있음) 예시) 소득분위 10분위 > 9분위 > 8분위\n",
    "\n",
    "#### Numeric Variable (Quantitative)\n",
    "\n",
    "- Continuous Data\n",
    "\n",
    "    - 데이터가 연속량으로서 셀 수 있는 형태. 예시) 키 - 166.1cm\n",
    "\n",
    "- Discrete Data\n",
    "\n",
    "    - 데이터가 비연속량으로서 셀 수 있는 형태 예시) 자식 수 5명"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*************-"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# id 제거\n",
    "sub_id = train['id'][len(train):]\n",
    "del train['id']\n",
    "# price 제거\n",
    "df_price = train['price']\n",
    "train = train.drop(columns=['price'])\n",
    "# date 처리\n",
    "train['date'] = train['date'].apply(lambda x : str(x[:8])).astype(str)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "categorical_columns = ['waterfront', 'view', 'condition', 'grade', 'zipcode']\n",
    "nominal_columns = ['waterfront', 'zipcode']\n",
    "ordinal_columns = ['view', 'condition', 'grade']\n",
    "\n",
    "numeric_columns = ['date', 'bedrooms', 'bathrooms', 'sqft_living', 'sqft_lot', 'floors', 'sqft_above', 'sqft_basement', \n",
    "                   'yr_built', 'yr_renovated', 'lat', 'long', 'sqft_living15', 'sqft_lot15']\n",
    "continuous_columns = ['date', 'sqft_living', 'sqft_lot', 'sqft_above', 'sqft_basement', 'yr_built', 'yr_renovated', \n",
    "                      'lat', 'long', 'sqft_living15', 'sqft_lot15']\n",
    "discrete_columns = ['bedrooms', 'bathrooms', 'floors']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x2160 with 12 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(6, 2, figsize=(20, 30))\n",
    "\n",
    "# id 변수는 제외하고 분포를 확인합니다.\n",
    "count = 0\n",
    "columns = continuous_columns + ['zipcode']\n",
    "columns.remove('yr_renovated')\n",
    "for row in range(6):\n",
    "    for col in range(2):\n",
    "        sns.kdeplot(train[columns[count]], ax=ax[row][col])\n",
    "        ax[row][col].set_title(columns[count], fontsize=15)\n",
    "        count+=1\n",
    "        if count == 11 :\n",
    "            break"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 5) feature-target 상관관계 파악\n",
    "\n",
    "### 0> 스피어만 상관 관계\n",
    "\n",
    "스피어만: 비례 관계\n",
    "\n",
    "u자 관계는 스피어만으로 파악 불가\n",
    "\n",
    "켄달 상관계수\n",
    "\n",
    "상관계수들 공부\n",
    "\n",
    "아래 코드에서 켄달 상관계수로 고칠 수 있다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['price' 'grade' 'sqft_living' 'sqft_living15' 'sqft_above' 'bathrooms'\n",
      " 'lat' 'bedrooms' 'floors' 'view' 'sqft_basement' 'waterfront'\n",
      " 'yr_renovated' 'yr_built' 'sqft_lot' 'long' 'sqft_lot15' 'id' 'condition'\n",
      " 'zipcode']\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x2498e46f348>"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# correlation이 높은 상위 10개의 heatmap\n",
    "# continuous + sequential variables --> spearman\n",
    "# abs는 반비례관계도 고려하기 위함\n",
    "# https://www.kaggle.com/junoindatascience/let-s-eda-it 준호님이 수정해 준 코드로 사용하였습니다. \n",
    "import scipy as sp\n",
    "df=pd.read_csv('./train.csv')\n",
    "df['date'] = df['date'].apply(lambda x : str(x[:8])).astype(str)\n",
    "cor_abs = abs(df.corr(method='spearman')) \n",
    "cor_cols = cor_abs.nlargest(n=20, columns='price').index # price과 correlation이 높은 column 10개 뽑기(내림차순)\n",
    "# spearman coefficient matrix\n",
    "cor = np.array(sp.stats.spearmanr(df[cor_cols].values))[0] # 10 x 10\n",
    "print(cor_cols.values)\n",
    "plt.figure(figsize=(10,10))\n",
    "sns.set(font_scale=1.25)\n",
    "sns.heatmap(cor, fmt='.2f', annot=True, square=True , annot_kws={'size' : 8} ,xticklabels=cor_cols.values, yticklabels=cor_cols.values)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "--------\n",
    "----------"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2. Feature Engineering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "train = pd.read_csv('./train.csv')\n",
    "test = pd.read_csv('./test.csv')\n",
    "\n",
    "train_copy = train.copy()\n",
    "train_copy['data'] = 'train'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1) remove outlier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "      <th>price</th>\n",
       "      <th>bedrooms</th>\n",
       "      <th>bathrooms</th>\n",
       "      <th>sqft_living</th>\n",
       "      <th>sqft_lot</th>\n",
       "      <th>floors</th>\n",
       "      <th>waterfront</th>\n",
       "      <th>view</th>\n",
       "      <th>...</th>\n",
       "      <th>sqft_above</th>\n",
       "      <th>sqft_basement</th>\n",
       "      <th>yr_built</th>\n",
       "      <th>yr_renovated</th>\n",
       "      <th>zipcode</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>sqft_living15</th>\n",
       "      <th>sqft_lot15</th>\n",
       "      <th>data</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>20141013T000000</td>\n",
       "      <td>221900.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1180</td>\n",
       "      <td>5650</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1180</td>\n",
       "      <td>0</td>\n",
       "      <td>1955</td>\n",
       "      <td>0</td>\n",
       "      <td>98178</td>\n",
       "      <td>47.5112</td>\n",
       "      <td>-122.257</td>\n",
       "      <td>1340</td>\n",
       "      <td>5650</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>20150225T000000</td>\n",
       "      <td>180000.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.00</td>\n",
       "      <td>770</td>\n",
       "      <td>10000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>770</td>\n",
       "      <td>0</td>\n",
       "      <td>1933</td>\n",
       "      <td>0</td>\n",
       "      <td>98028</td>\n",
       "      <td>47.7379</td>\n",
       "      <td>-122.233</td>\n",
       "      <td>2720</td>\n",
       "      <td>8062</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>20150218T000000</td>\n",
       "      <td>510000.0</td>\n",
       "      <td>3</td>\n",
       "      <td>2.00</td>\n",
       "      <td>1680</td>\n",
       "      <td>8080</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1680</td>\n",
       "      <td>0</td>\n",
       "      <td>1987</td>\n",
       "      <td>0</td>\n",
       "      <td>98074</td>\n",
       "      <td>47.6168</td>\n",
       "      <td>-122.045</td>\n",
       "      <td>1800</td>\n",
       "      <td>7503</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>20140627T000000</td>\n",
       "      <td>257500.0</td>\n",
       "      <td>3</td>\n",
       "      <td>2.25</td>\n",
       "      <td>1715</td>\n",
       "      <td>6819</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1715</td>\n",
       "      <td>0</td>\n",
       "      <td>1995</td>\n",
       "      <td>0</td>\n",
       "      <td>98003</td>\n",
       "      <td>47.3097</td>\n",
       "      <td>-122.327</td>\n",
       "      <td>2238</td>\n",
       "      <td>6819</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>20150115T000000</td>\n",
       "      <td>291850.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1.50</td>\n",
       "      <td>1060</td>\n",
       "      <td>9711</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1060</td>\n",
       "      <td>0</td>\n",
       "      <td>1963</td>\n",
       "      <td>0</td>\n",
       "      <td>98198</td>\n",
       "      <td>47.4095</td>\n",
       "      <td>-122.315</td>\n",
       "      <td>1650</td>\n",
       "      <td>9711</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   id             date     price  bedrooms  bathrooms  sqft_living  sqft_lot  \\\n",
       "0   0  20141013T000000  221900.0         3       1.00         1180      5650   \n",
       "1   1  20150225T000000  180000.0         2       1.00          770     10000   \n",
       "2   2  20150218T000000  510000.0         3       2.00         1680      8080   \n",
       "3   3  20140627T000000  257500.0         3       2.25         1715      6819   \n",
       "4   4  20150115T000000  291850.0         3       1.50         1060      9711   \n",
       "\n",
       "   floors  waterfront  view  ...  sqft_above  sqft_basement  yr_built  \\\n",
       "0     1.0           0     0  ...        1180              0      1955   \n",
       "1     1.0           0     0  ...         770              0      1933   \n",
       "2     1.0           0     0  ...        1680              0      1987   \n",
       "3     2.0           0     0  ...        1715              0      1995   \n",
       "4     1.0           0     0  ...        1060              0      1963   \n",
       "\n",
       "   yr_renovated  zipcode      lat     long  sqft_living15  sqft_lot15   data  \n",
       "0             0    98178  47.5112 -122.257           1340        5650  train  \n",
       "1             0    98028  47.7379 -122.233           2720        8062  train  \n",
       "2             0    98074  47.6168 -122.045           1800        7503  train  \n",
       "3             0    98003  47.3097 -122.327           2238        6819  train  \n",
       "4             0    98198  47.4095 -122.315           1650        9711  train  \n",
       "\n",
       "[5 rows x 22 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_copy = train_copy[~((train_copy['sqft_living'] > 12000) & (train_copy['price'] < 3000000))].reset_index(drop=True)\n",
    "    \n",
    "test_copy = test.copy()\n",
    "test_copy['data'] = 'test'\n",
    "test_copy['price'] = np.nan\n",
    "\n",
    "data = pd.concat([train_copy, test_copy], sort=False).reset_index(drop=True)\n",
    "data = data[train_copy.columns]\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-----"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2) neighborhood feature\n",
    "\n",
    "### 1> 거리 구하는 함수 정의\n",
    "\n",
    "출처: https://becominghuman.ai/good-feature-building-techniques-tricks-for-kaggle-my-kaggle-code-repository-c953b934f1e6\n",
    "\n",
    "- bearing(방위)\n",
    "- haversine_distance: 지구의 곡률을 고려한 distance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "def bearing_array(lat1, lng1, lat2, lng2): \n",
    "    AVG_EARTH_RADIUS = 6371 # in km \n",
    "    lng_delta_rad = np.radians(lng2 - lng1) \n",
    "    lat1, lng1, lat2, lng2 = map(np.radians, (lat1, lng1, lat2, lng2)) \n",
    "    y = np.sin(lng_delta_rad) * np.cos(lat2) \n",
    "    x = np.cos(lat1) * np.sin(lat2) - np.sin(lat1) * np.cos(lat2) * np.cos(lng_delta_rad) \n",
    "    return np.degrees(np.arctan2(y, x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "def haversine_array(lat1, lng1, lat2, lng2): \n",
    "    lat1, lng1, lat2, lng2 = map(np.radians, (lat1, lng1, lat2, lng2)) \n",
    "    AVG_EARTH_RADIUS = 6371 # in km \n",
    "    lat = lat2 - lat1 \n",
    "    lng = lng2 - lng1 \n",
    "    d = np.sin(lat * 0.5) ** 2 + np.cos(lat1) * np.cos(lat2) *      np.sin(lng * 0.5) ** 2 \n",
    "    h = 2 * AVG_EARTH_RADIUS * np.arcsin(np.sqrt(d)) \n",
    "    return h"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "47.1559 47.7776 -122.519 -121.315\n",
      "113.88352317220664\n",
      "52.1838927737921\n"
     ]
    }
   ],
   "source": [
    "print(data['lat'].min(), data['lat'].max(), data['long'].min(), data['long'].max())\n",
    "\n",
    "haversine_dist = haversine_array(data['lat'].min(), data['long'].min(), data['lat'].max(), data['long'].max())\n",
    "print(haversine_dist)\n",
    "\n",
    "bearing = bearing_array(data['lat'].min(), data['long'].min(), data['lat'].max(), data['long'].max())\n",
    "print(bearing)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2> neighborhood feature (distance)\n",
    "\n",
    "4km 이내에 들어오는 neighborhood의 거리와 id를 DataFrame으로 저장"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|████████████████████████████████████████████████████████████████████████████| 21502/21502 [52:06<00:00,  6.88it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(15818934, 3)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>neighbor_id</th>\n",
       "      <th>distance</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>16</td>\n",
       "      <td>2.897145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>80</td>\n",
       "      <td>1.329938</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>81</td>\n",
       "      <td>0</td>\n",
       "      <td>81</td>\n",
       "      <td>3.822482</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>83</td>\n",
       "      <td>0</td>\n",
       "      <td>83</td>\n",
       "      <td>2.186419</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>84</td>\n",
       "      <td>0</td>\n",
       "      <td>84</td>\n",
       "      <td>1.003934</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    id  neighbor_id  distance\n",
       "16   0           16  2.897145\n",
       "80   0           80  1.329938\n",
       "81   0           81  3.822482\n",
       "83   0           83  2.186419\n",
       "84   0           84  1.003934"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from tqdm import tqdm\n",
    "\n",
    "neighbor_df = pd.DataFrame()\n",
    "lat2 = data['lat'].values\n",
    "long2 = data['long'].values\n",
    "\n",
    "for i, row in tqdm(data.iterrows(), total=data.shape[0]):\n",
    "    lat1 = np.array(row['lat'])\n",
    "    long1 = np.array(row['long'])\n",
    "    dist_arr = haversine_array(lat1, long1, lat2, long2)\n",
    "    bearing_arr = bearing_array(lat1, long1, lat2, long2)\n",
    "    tmp_df = pd.DataFrame({\n",
    "        'id': np.tile(np.array([row['id']]), data.shape[0]),\n",
    "        'neighbor_id': data['id'],\n",
    "        'distance': dist_arr,\n",
    "    })\n",
    "    tmp_df = tmp_df[tmp_df['distance'] <= 4]\n",
    "    tmp_df = tmp_df[tmp_df['id'] != tmp_df['neighbor_id']]\n",
    "    neighbor_df = neighbor_df.append(tmp_df.copy())\n",
    "    del tmp_df\n",
    "    \n",
    "print(neighbor_df.shape)\n",
    "neighbor_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "neighbor_df.to_csv('./neighbor_df_orig1.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "------\n",
    "\n",
    "# 중도 시작할 경우"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "train = pd.read_csv('./train.csv')\n",
    "test = pd.read_csv('./test.csv')\n",
    "\n",
    "train_copy = train.copy()\n",
    "train_copy['data'] = 'train'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "      <th>price</th>\n",
       "      <th>bedrooms</th>\n",
       "      <th>bathrooms</th>\n",
       "      <th>sqft_living</th>\n",
       "      <th>sqft_lot</th>\n",
       "      <th>floors</th>\n",
       "      <th>waterfront</th>\n",
       "      <th>view</th>\n",
       "      <th>...</th>\n",
       "      <th>sqft_above</th>\n",
       "      <th>sqft_basement</th>\n",
       "      <th>yr_built</th>\n",
       "      <th>yr_renovated</th>\n",
       "      <th>zipcode</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>sqft_living15</th>\n",
       "      <th>sqft_lot15</th>\n",
       "      <th>data</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>20141013T000000</td>\n",
       "      <td>221900.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1180</td>\n",
       "      <td>5650</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1180</td>\n",
       "      <td>0</td>\n",
       "      <td>1955</td>\n",
       "      <td>0</td>\n",
       "      <td>98178</td>\n",
       "      <td>47.5112</td>\n",
       "      <td>-122.257</td>\n",
       "      <td>1340</td>\n",
       "      <td>5650</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>20150225T000000</td>\n",
       "      <td>180000.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.00</td>\n",
       "      <td>770</td>\n",
       "      <td>10000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>770</td>\n",
       "      <td>0</td>\n",
       "      <td>1933</td>\n",
       "      <td>0</td>\n",
       "      <td>98028</td>\n",
       "      <td>47.7379</td>\n",
       "      <td>-122.233</td>\n",
       "      <td>2720</td>\n",
       "      <td>8062</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>20150218T000000</td>\n",
       "      <td>510000.0</td>\n",
       "      <td>3</td>\n",
       "      <td>2.00</td>\n",
       "      <td>1680</td>\n",
       "      <td>8080</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1680</td>\n",
       "      <td>0</td>\n",
       "      <td>1987</td>\n",
       "      <td>0</td>\n",
       "      <td>98074</td>\n",
       "      <td>47.6168</td>\n",
       "      <td>-122.045</td>\n",
       "      <td>1800</td>\n",
       "      <td>7503</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>20140627T000000</td>\n",
       "      <td>257500.0</td>\n",
       "      <td>3</td>\n",
       "      <td>2.25</td>\n",
       "      <td>1715</td>\n",
       "      <td>6819</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1715</td>\n",
       "      <td>0</td>\n",
       "      <td>1995</td>\n",
       "      <td>0</td>\n",
       "      <td>98003</td>\n",
       "      <td>47.3097</td>\n",
       "      <td>-122.327</td>\n",
       "      <td>2238</td>\n",
       "      <td>6819</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>20150115T000000</td>\n",
       "      <td>291850.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1.50</td>\n",
       "      <td>1060</td>\n",
       "      <td>9711</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1060</td>\n",
       "      <td>0</td>\n",
       "      <td>1963</td>\n",
       "      <td>0</td>\n",
       "      <td>98198</td>\n",
       "      <td>47.4095</td>\n",
       "      <td>-122.315</td>\n",
       "      <td>1650</td>\n",
       "      <td>9711</td>\n",
       "      <td>train</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   id             date     price  bedrooms  bathrooms  sqft_living  sqft_lot  \\\n",
       "0   0  20141013T000000  221900.0         3       1.00         1180      5650   \n",
       "1   1  20150225T000000  180000.0         2       1.00          770     10000   \n",
       "2   2  20150218T000000  510000.0         3       2.00         1680      8080   \n",
       "3   3  20140627T000000  257500.0         3       2.25         1715      6819   \n",
       "4   4  20150115T000000  291850.0         3       1.50         1060      9711   \n",
       "\n",
       "   floors  waterfront  view  ...  sqft_above  sqft_basement  yr_built  \\\n",
       "0     1.0           0     0  ...        1180              0      1955   \n",
       "1     1.0           0     0  ...         770              0      1933   \n",
       "2     1.0           0     0  ...        1680              0      1987   \n",
       "3     2.0           0     0  ...        1715              0      1995   \n",
       "4     1.0           0     0  ...        1060              0      1963   \n",
       "\n",
       "   yr_renovated  zipcode      lat     long  sqft_living15  sqft_lot15   data  \n",
       "0             0    98178  47.5112 -122.257           1340        5650  train  \n",
       "1             0    98028  47.7379 -122.233           2720        8062  train  \n",
       "2             0    98074  47.6168 -122.045           1800        7503  train  \n",
       "3             0    98003  47.3097 -122.327           2238        6819  train  \n",
       "4             0    98198  47.4095 -122.315           1650        9711  train  \n",
       "\n",
       "[5 rows x 22 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_copy = train_copy[~((train_copy['sqft_living'] > 12000) & (train_copy['price'] < 3000000))].reset_index(drop=True)\n",
    "    \n",
    "test_copy = test.copy()\n",
    "test_copy['data'] = 'test'\n",
    "test_copy['price'] = np.nan\n",
    "\n",
    "data = pd.concat([train_copy, test_copy], sort=False).reset_index(drop=True)\n",
    "data = data[train_copy.columns]\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>neighbor_id</th>\n",
       "      <th>distance</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>16</td>\n",
       "      <td>2.897145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>80</td>\n",
       "      <td>1.329938</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>81</td>\n",
       "      <td>3.822482</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>83</td>\n",
       "      <td>2.186419</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>84</td>\n",
       "      <td>1.003934</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15818929</td>\n",
       "      <td>21502</td>\n",
       "      <td>21381</td>\n",
       "      <td>0.287033</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15818930</td>\n",
       "      <td>21502</td>\n",
       "      <td>21393</td>\n",
       "      <td>0.532765</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15818931</td>\n",
       "      <td>21502</td>\n",
       "      <td>21415</td>\n",
       "      <td>3.877479</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15818932</td>\n",
       "      <td>21502</td>\n",
       "      <td>21431</td>\n",
       "      <td>0.332519</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15818933</td>\n",
       "      <td>21502</td>\n",
       "      <td>21470</td>\n",
       "      <td>3.296173</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>15818934 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             id  neighbor_id  distance\n",
       "0             0           16  2.897145\n",
       "1             0           80  1.329938\n",
       "2             0           81  3.822482\n",
       "3             0           83  2.186419\n",
       "4             0           84  1.003934\n",
       "...         ...          ...       ...\n",
       "15818929  21502        21381  0.287033\n",
       "15818930  21502        21393  0.532765\n",
       "15818931  21502        21415  3.877479\n",
       "15818932  21502        21431  0.332519\n",
       "15818933  21502        21470  3.296173\n",
       "\n",
       "[15818934 rows x 3 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "neighbor_df=pd.read_csv('./neighbor_df_orig1.csv')\n",
    "neighbor_df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3> neighborhood features (other features)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(15818934, 15)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>neighbor_id</th>\n",
       "      <th>distance</th>\n",
       "      <th>neighbor_sqft_living</th>\n",
       "      <th>neighbor_sqft_living15</th>\n",
       "      <th>neighbor_sqft_lot</th>\n",
       "      <th>neighbor_sqft_lot15</th>\n",
       "      <th>neighbor_bedrooms</th>\n",
       "      <th>neighbor_bathrooms</th>\n",
       "      <th>neighbor_grade</th>\n",
       "      <th>neighbor_waterfront</th>\n",
       "      <th>neighbor_view</th>\n",
       "      <th>neighbor_condition</th>\n",
       "      <th>data</th>\n",
       "      <th>neighbor_price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>16</td>\n",
       "      <td>2.897145</td>\n",
       "      <td>3050</td>\n",
       "      <td>4110</td>\n",
       "      <td>44867</td>\n",
       "      <td>20336</td>\n",
       "      <td>3</td>\n",
       "      <td>2.75</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>train</td>\n",
       "      <td>2000000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>80</td>\n",
       "      <td>1.329938</td>\n",
       "      <td>880</td>\n",
       "      <td>1190</td>\n",
       "      <td>6780</td>\n",
       "      <td>6780</td>\n",
       "      <td>2</td>\n",
       "      <td>1.00</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>train</td>\n",
       "      <td>205425.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>81</td>\n",
       "      <td>3.822482</td>\n",
       "      <td>1570</td>\n",
       "      <td>1880</td>\n",
       "      <td>9600</td>\n",
       "      <td>9000</td>\n",
       "      <td>4</td>\n",
       "      <td>2.00</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>train</td>\n",
       "      <td>171800.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>83</td>\n",
       "      <td>2.186419</td>\n",
       "      <td>2100</td>\n",
       "      <td>1850</td>\n",
       "      <td>4400</td>\n",
       "      <td>4400</td>\n",
       "      <td>4</td>\n",
       "      <td>1.75</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>train</td>\n",
       "      <td>445000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>84</td>\n",
       "      <td>1.003934</td>\n",
       "      <td>2100</td>\n",
       "      <td>2660</td>\n",
       "      <td>8201</td>\n",
       "      <td>8712</td>\n",
       "      <td>3</td>\n",
       "      <td>2.25</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>train</td>\n",
       "      <td>445000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id  neighbor_id  distance  neighbor_sqft_living  neighbor_sqft_living15  \\\n",
       "0   0           16  2.897145                  3050                    4110   \n",
       "1   0           80  1.329938                   880                    1190   \n",
       "2   0           81  3.822482                  1570                    1880   \n",
       "3   0           83  2.186419                  2100                    1850   \n",
       "4   0           84  1.003934                  2100                    2660   \n",
       "\n",
       "   neighbor_sqft_lot  neighbor_sqft_lot15  neighbor_bedrooms  \\\n",
       "0              44867                20336                  3   \n",
       "1               6780                 6780                  2   \n",
       "2               9600                 9000                  4   \n",
       "3               4400                 4400                  4   \n",
       "4               8201                 8712                  3   \n",
       "\n",
       "   neighbor_bathrooms  neighbor_grade  neighbor_waterfront  neighbor_view  \\\n",
       "0                2.75               9                    0              4   \n",
       "1                1.00               6                    0              0   \n",
       "2                2.00               6                    0              0   \n",
       "3                1.75               7                    0              0   \n",
       "4                2.25               8                    0              2   \n",
       "\n",
       "   neighbor_condition   data  neighbor_price  \n",
       "0                   3  train       2000000.0  \n",
       "1                   4  train        205425.0  \n",
       "2                   3  train        171800.0  \n",
       "3                   5  train        445000.0  \n",
       "4                   3  train        445000.0  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_df = data.rename(index=str, columns={'id': 'neighbor_id'})\n",
    "neighbor_info_df = neighbor_df.merge(data_df[['neighbor_id','sqft_living','sqft_living15','sqft_lot','sqft_lot15','bedrooms','bathrooms',\n",
    "                                              'grade','waterfront','view','condition','data','price']], on='neighbor_id')\n",
    "neighbor_info_df.columns = ['id','neighbor_id','distance','neighbor_sqft_living',\n",
    "                            'neighbor_sqft_living15','neighbor_sqft_lot','neighbor_sqft_lot15','neighbor_bedrooms',\n",
    "                            'neighbor_bathrooms','neighbor_grade','neighbor_waterfront',\n",
    "                            'neighbor_view','neighbor_condition','data','neighbor_price']\n",
    "neighbor_info_df = neighbor_info_df.sort_values(['id','neighbor_id']).reset_index(drop=True)\n",
    "print(neighbor_info_df.shape)\n",
    "neighbor_info_df.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "ename": "OSError",
     "evalue": "[Errno 28] No space left on device",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mOSError\u001b[0m                                   Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-24-17fd88449f3e>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mneighbor_info_df\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mto_csv\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'./neighbor_df_orig2.csv'\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mFalse\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;32mC:\\Anaconda3\\lib\\site-packages\\pandas\\core\\generic.py\u001b[0m in \u001b[0;36mto_csv\u001b[1;34m(self, path_or_buf, sep, na_rep, float_format, columns, header, index, index_label, mode, encoding, compression, quoting, quotechar, line_terminator, chunksize, date_format, doublequote, escapechar, decimal)\u001b[0m\n\u001b[0;32m   3226\u001b[0m             \u001b[0mdecimal\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mdecimal\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3227\u001b[0m         )\n\u001b[1;32m-> 3228\u001b[1;33m         \u001b[0mformatter\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msave\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   3229\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3230\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mpath_or_buf\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\Anaconda3\\lib\\site-packages\\pandas\\io\\formats\\csvs.py\u001b[0m in \u001b[0;36msave\u001b[1;34m(self)\u001b[0m\n\u001b[0;32m    200\u001b[0m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mwriter\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mUnicodeWriter\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mwriter_kwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    201\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 202\u001b[1;33m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_save\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    203\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    204\u001b[0m         \u001b[1;32mfinally\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\Anaconda3\\lib\\site-packages\\pandas\\io\\formats\\csvs.py\u001b[0m in \u001b[0;36m_save\u001b[1;34m(self)\u001b[0m\n\u001b[0;32m    322\u001b[0m                 \u001b[1;32mbreak\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    323\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 324\u001b[1;33m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_save_chunk\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mstart_i\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mend_i\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    325\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    326\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m_save_chunk\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mstart_i\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mend_i\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\Anaconda3\\lib\\site-packages\\pandas\\io\\formats\\csvs.py\u001b[0m in \u001b[0;36m_save_chunk\u001b[1;34m(self, start_i, end_i)\u001b[0m\n\u001b[0;32m    354\u001b[0m         )\n\u001b[0;32m    355\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 356\u001b[1;33m         \u001b[0mlibwriters\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mwrite_csv_rows\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mix\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mnlevels\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcols\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mwriter\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;32mpandas\\_libs\\writers.pyx\u001b[0m in \u001b[0;36mpandas._libs.writers.write_csv_rows\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;31mOSError\u001b[0m: [Errno 28] No space left on device"
     ]
    }
   ],
   "source": [
    "neighbor_info_df.to_csv('./neighbor_df_orig2.csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "del test, test_copy, train, train_copy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(15818934, 26)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>neighbor_id</th>\n",
       "      <th>distance</th>\n",
       "      <th>neighbor_sqft_living</th>\n",
       "      <th>neighbor_sqft_living15</th>\n",
       "      <th>neighbor_sqft_lot</th>\n",
       "      <th>neighbor_sqft_lot15</th>\n",
       "      <th>neighbor_bedrooms</th>\n",
       "      <th>neighbor_bathrooms</th>\n",
       "      <th>neighbor_grade</th>\n",
       "      <th>...</th>\n",
       "      <th>sqft_living15</th>\n",
       "      <th>sqft_lot</th>\n",
       "      <th>sqft_lot15</th>\n",
       "      <th>bedrooms</th>\n",
       "      <th>bathrooms</th>\n",
       "      <th>grade</th>\n",
       "      <th>waterfront</th>\n",
       "      <th>view</th>\n",
       "      <th>condition</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>16</td>\n",
       "      <td>2.897145</td>\n",
       "      <td>3050</td>\n",
       "      <td>4110</td>\n",
       "      <td>44867</td>\n",
       "      <td>20336</td>\n",
       "      <td>3</td>\n",
       "      <td>2.75</td>\n",
       "      <td>9</td>\n",
       "      <td>...</td>\n",
       "      <td>1340</td>\n",
       "      <td>5650</td>\n",
       "      <td>5650</td>\n",
       "      <td>3</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>221900.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>80</td>\n",
       "      <td>1.329938</td>\n",
       "      <td>880</td>\n",
       "      <td>1190</td>\n",
       "      <td>6780</td>\n",
       "      <td>6780</td>\n",
       "      <td>2</td>\n",
       "      <td>1.00</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1340</td>\n",
       "      <td>5650</td>\n",
       "      <td>5650</td>\n",
       "      <td>3</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>221900.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>81</td>\n",
       "      <td>3.822482</td>\n",
       "      <td>1570</td>\n",
       "      <td>1880</td>\n",
       "      <td>9600</td>\n",
       "      <td>9000</td>\n",
       "      <td>4</td>\n",
       "      <td>2.00</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>1340</td>\n",
       "      <td>5650</td>\n",
       "      <td>5650</td>\n",
       "      <td>3</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>221900.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>83</td>\n",
       "      <td>2.186419</td>\n",
       "      <td>2100</td>\n",
       "      <td>1850</td>\n",
       "      <td>4400</td>\n",
       "      <td>4400</td>\n",
       "      <td>4</td>\n",
       "      <td>1.75</td>\n",
       "      <td>7</td>\n",
       "      <td>...</td>\n",
       "      <td>1340</td>\n",
       "      <td>5650</td>\n",
       "      <td>5650</td>\n",
       "      <td>3</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>221900.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>84</td>\n",
       "      <td>1.003934</td>\n",
       "      <td>2100</td>\n",
       "      <td>2660</td>\n",
       "      <td>8201</td>\n",
       "      <td>8712</td>\n",
       "      <td>3</td>\n",
       "      <td>2.25</td>\n",
       "      <td>8</td>\n",
       "      <td>...</td>\n",
       "      <td>1340</td>\n",
       "      <td>5650</td>\n",
       "      <td>5650</td>\n",
       "      <td>3</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>221900.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   id  neighbor_id  distance  neighbor_sqft_living  neighbor_sqft_living15  \\\n",
       "0   0           16  2.897145                  3050                    4110   \n",
       "1   0           80  1.329938                   880                    1190   \n",
       "2   0           81  3.822482                  1570                    1880   \n",
       "3   0           83  2.186419                  2100                    1850   \n",
       "4   0           84  1.003934                  2100                    2660   \n",
       "\n",
       "   neighbor_sqft_lot  neighbor_sqft_lot15  neighbor_bedrooms  \\\n",
       "0              44867                20336                  3   \n",
       "1               6780                 6780                  2   \n",
       "2               9600                 9000                  4   \n",
       "3               4400                 4400                  4   \n",
       "4               8201                 8712                  3   \n",
       "\n",
       "   neighbor_bathrooms  neighbor_grade  ...  sqft_living15  sqft_lot  \\\n",
       "0                2.75               9  ...           1340      5650   \n",
       "1                1.00               6  ...           1340      5650   \n",
       "2                2.00               6  ...           1340      5650   \n",
       "3                1.75               7  ...           1340      5650   \n",
       "4                2.25               8  ...           1340      5650   \n",
       "\n",
       "   sqft_lot15 bedrooms  bathrooms  grade  waterfront  view  condition  \\\n",
       "0        5650        3        1.0      7           0     0          3   \n",
       "1        5650        3        1.0      7           0     0          3   \n",
       "2        5650        3        1.0      7           0     0          3   \n",
       "3        5650        3        1.0      7           0     0          3   \n",
       "4        5650        3        1.0      7           0     0          3   \n",
       "\n",
       "      price  \n",
       "0  221900.0  \n",
       "1  221900.0  \n",
       "2  221900.0  \n",
       "3  221900.0  \n",
       "4  221900.0  \n",
       "\n",
       "[5 rows x 26 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "neighbor_info_df = neighbor_info_df.merge(data[['id','sqft_living','sqft_living15','sqft_lot','sqft_lot15','bedrooms','bathrooms','grade',\n",
    "                                                'waterfront','view','condition','price']], on='id').reset_index(drop=True)\n",
    "print(neighbor_info_df.shape)\n",
    "neighbor_info_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(15818934, 36)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>neighbor_id</th>\n",
       "      <th>distance</th>\n",
       "      <th>neighbor_sqft_living</th>\n",
       "      <th>neighbor_sqft_living15</th>\n",
       "      <th>neighbor_sqft_lot</th>\n",
       "      <th>neighbor_sqft_lot15</th>\n",
       "      <th>neighbor_bedrooms</th>\n",
       "      <th>neighbor_bathrooms</th>\n",
       "      <th>neighbor_grade</th>\n",
       "      <th>...</th>\n",
       "      <th>sqft_living_diff</th>\n",
       "      <th>sqft_living15_diff</th>\n",
       "      <th>sqft_lot_diff</th>\n",
       "      <th>sqft_lot15_diff</th>\n",
       "      <th>bedrooms_diff</th>\n",
       "      <th>bathrooms_diff</th>\n",
       "      <th>grade_diff</th>\n",
       "      <th>waterfront_diff</th>\n",
       "      <th>view_diff</th>\n",
       "      <th>condition_diff</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>16</td>\n",
       "      <td>2.897145</td>\n",
       "      <td>3050</td>\n",
       "      <td>4110</td>\n",
       "      <td>44867</td>\n",
       "      <td>20336</td>\n",
       "      <td>3</td>\n",
       "      <td>2.75</td>\n",
       "      <td>9</td>\n",
       "      <td>...</td>\n",
       "      <td>1870</td>\n",
       "      <td>2770</td>\n",
       "      <td>39217</td>\n",
       "      <td>14686</td>\n",
       "      <td>0</td>\n",
       "      <td>1.75</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>80</td>\n",
       "      <td>1.329938</td>\n",
       "      <td>880</td>\n",
       "      <td>1190</td>\n",
       "      <td>6780</td>\n",
       "      <td>6780</td>\n",
       "      <td>2</td>\n",
       "      <td>1.00</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>300</td>\n",
       "      <td>150</td>\n",
       "      <td>1130</td>\n",
       "      <td>1130</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>81</td>\n",
       "      <td>3.822482</td>\n",
       "      <td>1570</td>\n",
       "      <td>1880</td>\n",
       "      <td>9600</td>\n",
       "      <td>9000</td>\n",
       "      <td>4</td>\n",
       "      <td>2.00</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>390</td>\n",
       "      <td>540</td>\n",
       "      <td>3950</td>\n",
       "      <td>3350</td>\n",
       "      <td>1</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>83</td>\n",
       "      <td>2.186419</td>\n",
       "      <td>2100</td>\n",
       "      <td>1850</td>\n",
       "      <td>4400</td>\n",
       "      <td>4400</td>\n",
       "      <td>4</td>\n",
       "      <td>1.75</td>\n",
       "      <td>7</td>\n",
       "      <td>...</td>\n",
       "      <td>920</td>\n",
       "      <td>510</td>\n",
       "      <td>1250</td>\n",
       "      <td>1250</td>\n",
       "      <td>1</td>\n",
       "      <td>0.75</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>84</td>\n",
       "      <td>1.003934</td>\n",
       "      <td>2100</td>\n",
       "      <td>2660</td>\n",
       "      <td>8201</td>\n",
       "      <td>8712</td>\n",
       "      <td>3</td>\n",
       "      <td>2.25</td>\n",
       "      <td>8</td>\n",
       "      <td>...</td>\n",
       "      <td>920</td>\n",
       "      <td>1320</td>\n",
       "      <td>2551</td>\n",
       "      <td>3062</td>\n",
       "      <td>0</td>\n",
       "      <td>1.25</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 36 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   id  neighbor_id  distance  neighbor_sqft_living  neighbor_sqft_living15  \\\n",
       "0   0           16  2.897145                  3050                    4110   \n",
       "1   0           80  1.329938                   880                    1190   \n",
       "2   0           81  3.822482                  1570                    1880   \n",
       "3   0           83  2.186419                  2100                    1850   \n",
       "4   0           84  1.003934                  2100                    2660   \n",
       "\n",
       "   neighbor_sqft_lot  neighbor_sqft_lot15  neighbor_bedrooms  \\\n",
       "0              44867                20336                  3   \n",
       "1               6780                 6780                  2   \n",
       "2               9600                 9000                  4   \n",
       "3               4400                 4400                  4   \n",
       "4               8201                 8712                  3   \n",
       "\n",
       "   neighbor_bathrooms  neighbor_grade  ...  sqft_living_diff  \\\n",
       "0                2.75               9  ...              1870   \n",
       "1                1.00               6  ...               300   \n",
       "2                2.00               6  ...               390   \n",
       "3                1.75               7  ...               920   \n",
       "4                2.25               8  ...               920   \n",
       "\n",
       "   sqft_living15_diff  sqft_lot_diff sqft_lot15_diff  bedrooms_diff  \\\n",
       "0                2770          39217           14686              0   \n",
       "1                 150           1130            1130              1   \n",
       "2                 540           3950            3350              1   \n",
       "3                 510           1250            1250              1   \n",
       "4                1320           2551            3062              0   \n",
       "\n",
       "   bathrooms_diff  grade_diff  waterfront_diff  view_diff  condition_diff  \n",
       "0            1.75           2                0          4               0  \n",
       "1            0.00           1                0          0               1  \n",
       "2            1.00           1                0          0               0  \n",
       "3            0.75           0                0          0               2  \n",
       "4            1.25           1                0          2               0  \n",
       "\n",
       "[5 rows x 36 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cols = ['sqft_living','sqft_living15','sqft_lot','sqft_lot15','bedrooms','bathrooms','grade','waterfront','view','condition']\n",
    "\n",
    "for col in cols:\n",
    "    neighbor_info_df[col + '_diff'] = abs(neighbor_info_df[col] - neighbor_info_df['neighbor_' + col])\n",
    "\n",
    "print(neighbor_info_df.shape)\n",
    "neighbor_info_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "neighbor_info_df.to_csv('./neighbor_df_info.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "-----\n",
    "\n",
    "## 3) neighborhood feature by distance\n",
    "\n",
    "### 1> 1km"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "neighbor_info_df = pd.read_csv('./neighbor_df_info.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(21113, 51)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>neighbor_1km_count</th>\n",
       "      <th>nb_1km_distance_min</th>\n",
       "      <th>nb_1km_distance_max</th>\n",
       "      <th>nb_1km_distance_mean</th>\n",
       "      <th>nb_1km_distance_median</th>\n",
       "      <th>nb_1km_distance_std</th>\n",
       "      <th>nb_1km_distance_skew</th>\n",
       "      <th>nb_1km_price_mean</th>\n",
       "      <th>nb_1km_sqft_living_min</th>\n",
       "      <th>...</th>\n",
       "      <th>nb_1km_view_mean</th>\n",
       "      <th>nb_1km_view_median</th>\n",
       "      <th>nb_1km_view_std</th>\n",
       "      <th>nb_1km_view_skew</th>\n",
       "      <th>nb_1km_condition_min</th>\n",
       "      <th>nb_1km_condition_max</th>\n",
       "      <th>nb_1km_condition_mean</th>\n",
       "      <th>nb_1km_condition_median</th>\n",
       "      <th>nb_1km_condition_std</th>\n",
       "      <th>nb_1km_condition_skew</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>16</td>\n",
       "      <td>0.044478</td>\n",
       "      <td>0.493093</td>\n",
       "      <td>0.378010</td>\n",
       "      <td>0.439326</td>\n",
       "      <td>0.141681</td>\n",
       "      <td>-1.646562</td>\n",
       "      <td>12.798409</td>\n",
       "      <td>580</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0625</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1.181454</td>\n",
       "      <td>0.419057</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>3.750000</td>\n",
       "      <td>3.5</td>\n",
       "      <td>0.856349</td>\n",
       "      <td>0.545960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>0.143364</td>\n",
       "      <td>0.461992</td>\n",
       "      <td>0.288889</td>\n",
       "      <td>0.284126</td>\n",
       "      <td>0.121321</td>\n",
       "      <td>0.056573</td>\n",
       "      <td>13.027977</td>\n",
       "      <td>1180</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>18</td>\n",
       "      <td>0.011119</td>\n",
       "      <td>0.488489</td>\n",
       "      <td>0.320260</td>\n",
       "      <td>0.387010</td>\n",
       "      <td>0.154066</td>\n",
       "      <td>-0.882053</td>\n",
       "      <td>13.142304</td>\n",
       "      <td>1350</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>3.111111</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.323381</td>\n",
       "      <td>2.705788</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>0.143684</td>\n",
       "      <td>0.402694</td>\n",
       "      <td>0.297184</td>\n",
       "      <td>0.311232</td>\n",
       "      <td>0.097253</td>\n",
       "      <td>-0.672936</td>\n",
       "      <td>12.360525</td>\n",
       "      <td>1380</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>0.266589</td>\n",
       "      <td>0.449924</td>\n",
       "      <td>0.358256</td>\n",
       "      <td>0.358256</td>\n",
       "      <td>0.129637</td>\n",
       "      <td>NaN</td>\n",
       "      <td>12.510218</td>\n",
       "      <td>1840</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>3.5</td>\n",
       "      <td>0.707107</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 51 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   id  neighbor_1km_count  nb_1km_distance_min  nb_1km_distance_max  \\\n",
       "0   0                  16             0.044478             0.493093   \n",
       "1   1                  12             0.143364             0.461992   \n",
       "2   2                  18             0.011119             0.488489   \n",
       "3   3                   6             0.143684             0.402694   \n",
       "4   4                   2             0.266589             0.449924   \n",
       "\n",
       "   nb_1km_distance_mean  nb_1km_distance_median  nb_1km_distance_std  \\\n",
       "0              0.378010                0.439326             0.141681   \n",
       "1              0.288889                0.284126             0.121321   \n",
       "2              0.320260                0.387010             0.154066   \n",
       "3              0.297184                0.311232             0.097253   \n",
       "4              0.358256                0.358256             0.129637   \n",
       "\n",
       "   nb_1km_distance_skew  nb_1km_price_mean  nb_1km_sqft_living_min  ...  \\\n",
       "0             -1.646562          12.798409                     580  ...   \n",
       "1              0.056573          13.027977                    1180  ...   \n",
       "2             -0.882053          13.142304                    1350  ...   \n",
       "3             -0.672936          12.360525                    1380  ...   \n",
       "4                   NaN          12.510218                    1840  ...   \n",
       "\n",
       "   nb_1km_view_mean  nb_1km_view_median  nb_1km_view_std  nb_1km_view_skew  \\\n",
       "0            1.0625                 0.5         1.181454          0.419057   \n",
       "1            0.0000                 0.0         0.000000          0.000000   \n",
       "2            0.0000                 0.0         0.000000          0.000000   \n",
       "3            0.0000                 0.0         0.000000          0.000000   \n",
       "4            0.0000                 0.0         0.000000               NaN   \n",
       "\n",
       "   nb_1km_condition_min  nb_1km_condition_max  nb_1km_condition_mean  \\\n",
       "0                     3                     5               3.750000   \n",
       "1                     3                     3               3.000000   \n",
       "2                     3                     4               3.111111   \n",
       "3                     3                     3               3.000000   \n",
       "4                     3                     4               3.500000   \n",
       "\n",
       "   nb_1km_condition_median  nb_1km_condition_std  nb_1km_condition_skew  \n",
       "0                      3.5              0.856349               0.545960  \n",
       "1                      3.0              0.000000               0.000000  \n",
       "2                      3.0              0.323381               2.705788  \n",
       "3                      3.0              0.000000               0.000000  \n",
       "4                      3.5              0.707107                    NaN  \n",
       "\n",
       "[5 rows x 51 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "neighbor_1km = neighbor_info_df[(neighbor_info_df['data'] == 'train') & (neighbor_info_df['distance'] <= 0.5)].copy()\n",
    "neighbor_1km['neighbor_price_log'] = np.log1p(neighbor_1km['neighbor_price'])\n",
    "neighbor_1km_stat = neighbor_1km.groupby('id').agg({\n",
    "    'neighbor_id': 'count',\n",
    "    'distance': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_price_log': ['mean'],\n",
    "    'neighbor_sqft_living': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_sqft_lot': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_bedrooms': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_bathrooms': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_grade': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_view': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_condition': ['min','max','mean','median','std','skew'],\n",
    "}).reset_index()\n",
    "\n",
    "neighbor_1km_stat.columns = [\n",
    "    'id','neighbor_1km_count',\n",
    "    'nb_1km_distance_min','nb_1km_distance_max','nb_1km_distance_mean','nb_1km_distance_median','nb_1km_distance_std','nb_1km_distance_skew',\n",
    "    'nb_1km_price_mean',\n",
    "    'nb_1km_sqft_living_min','nb_1km_sqft_living_max','nb_1km_sqft_living_mean','nb_1km_sqft_living_median','nb_1km_sqft_living_std','nb_1km_sqft_living_skew',\n",
    "    'nb_1km_sqft_lot_min','nb_1km_sqft_lot_max','nb_1km_sqft_lot_mean','nb_1km_sqft_lot_median','nb_1km_sqft_lot_std','nb_1km_sqft_lot_skew',\n",
    "    'nb_1km_bedrooms_min','nb_1km_bedrooms_max','nb_1km_bedrooms_mean','nb_1km_bedrooms_median','nb_1km_bedrooms_std','nb_1km_bedrooms_skew',\n",
    "    'nb_1km_bathrooms_min','nb_1km_bathrooms_max','nb_1km_bathrooms_mean','nb_1km_bathrooms_median','nb_1km_bathrooms_std','nb_1km_bathrooms_skew',\n",
    "    'nb_1km_grade_min','nb_1km_grade_max','nb_1km_grade_mean','nb_1km_grade_median','nb_1km_grade_std','nb_1km_grade_skew',\n",
    "    'nb_1km_view_min','nb_1km_view_max','nb_1km_view_mean','nb_1km_view_median','nb_1km_view_std','nb_1km_view_skew',\n",
    "    'nb_1km_condition_min','nb_1km_condition_max','nb_1km_condition_mean','nb_1km_condition_median','nb_1km_condition_std','nb_1km_condition_skew',\n",
    "]\n",
    "\n",
    "print(neighbor_1km_stat.shape)\n",
    "neighbor_1km_stat.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "neighbor_1km_stat.to_csv('./neighbor_1km_stat.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2> 3km"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(21475, 51)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>neighbor_3km_count</th>\n",
       "      <th>nb_3km_distance_min</th>\n",
       "      <th>nb_3km_distance_max</th>\n",
       "      <th>nb_3km_distance_mean</th>\n",
       "      <th>nb_3km_distance_median</th>\n",
       "      <th>nb_3km_distance_std</th>\n",
       "      <th>nb_3km_distance_skew</th>\n",
       "      <th>nb_3km_price_mean</th>\n",
       "      <th>nb_3km_sqft_living_min</th>\n",
       "      <th>...</th>\n",
       "      <th>nb_3km_view_mean</th>\n",
       "      <th>nb_3km_view_median</th>\n",
       "      <th>nb_3km_view_std</th>\n",
       "      <th>nb_3km_view_skew</th>\n",
       "      <th>nb_3km_condition_min</th>\n",
       "      <th>nb_3km_condition_max</th>\n",
       "      <th>nb_3km_condition_mean</th>\n",
       "      <th>nb_3km_condition_median</th>\n",
       "      <th>nb_3km_condition_std</th>\n",
       "      <th>nb_3km_condition_skew</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>99</td>\n",
       "      <td>0.044478</td>\n",
       "      <td>1.493888</td>\n",
       "      <td>0.882132</td>\n",
       "      <td>0.859489</td>\n",
       "      <td>0.353234</td>\n",
       "      <td>-0.016417</td>\n",
       "      <td>12.619755</td>\n",
       "      <td>580</td>\n",
       "      <td>...</td>\n",
       "      <td>0.858586</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.355338</td>\n",
       "      <td>1.291112</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>3.454545</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.732242</td>\n",
       "      <td>1.274569</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>130</td>\n",
       "      <td>0.143364</td>\n",
       "      <td>1.488608</td>\n",
       "      <td>0.946329</td>\n",
       "      <td>0.969687</td>\n",
       "      <td>0.327360</td>\n",
       "      <td>-0.521540</td>\n",
       "      <td>12.953995</td>\n",
       "      <td>900</td>\n",
       "      <td>...</td>\n",
       "      <td>0.023077</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.263117</td>\n",
       "      <td>11.401754</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>3.292308</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.520080</td>\n",
       "      <td>1.575772</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>112</td>\n",
       "      <td>0.011119</td>\n",
       "      <td>1.482715</td>\n",
       "      <td>1.009641</td>\n",
       "      <td>1.148999</td>\n",
       "      <td>0.385202</td>\n",
       "      <td>-0.802123</td>\n",
       "      <td>13.257764</td>\n",
       "      <td>970</td>\n",
       "      <td>...</td>\n",
       "      <td>0.062500</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.362207</td>\n",
       "      <td>6.609893</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>3.205357</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.486547</td>\n",
       "      <td>1.898739</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>46</td>\n",
       "      <td>0.143684</td>\n",
       "      <td>1.496924</td>\n",
       "      <td>1.016818</td>\n",
       "      <td>1.052526</td>\n",
       "      <td>0.360037</td>\n",
       "      <td>-0.815843</td>\n",
       "      <td>12.497773</td>\n",
       "      <td>760</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>3.282609</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.544183</td>\n",
       "      <td>0.960641</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>67</td>\n",
       "      <td>0.266589</td>\n",
       "      <td>1.499869</td>\n",
       "      <td>1.151251</td>\n",
       "      <td>1.204851</td>\n",
       "      <td>0.265715</td>\n",
       "      <td>-1.335487</td>\n",
       "      <td>12.601461</td>\n",
       "      <td>830</td>\n",
       "      <td>...</td>\n",
       "      <td>0.850746</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.209229</td>\n",
       "      <td>1.143257</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>3.477612</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.586676</td>\n",
       "      <td>-0.142971</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 51 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   id  neighbor_3km_count  nb_3km_distance_min  nb_3km_distance_max  \\\n",
       "0   0                  99             0.044478             1.493888   \n",
       "1   1                 130             0.143364             1.488608   \n",
       "2   2                 112             0.011119             1.482715   \n",
       "3   3                  46             0.143684             1.496924   \n",
       "4   4                  67             0.266589             1.499869   \n",
       "\n",
       "   nb_3km_distance_mean  nb_3km_distance_median  nb_3km_distance_std  \\\n",
       "0              0.882132                0.859489             0.353234   \n",
       "1              0.946329                0.969687             0.327360   \n",
       "2              1.009641                1.148999             0.385202   \n",
       "3              1.016818                1.052526             0.360037   \n",
       "4              1.151251                1.204851             0.265715   \n",
       "\n",
       "   nb_3km_distance_skew  nb_3km_price_mean  nb_3km_sqft_living_min  ...  \\\n",
       "0             -0.016417          12.619755                     580  ...   \n",
       "1             -0.521540          12.953995                     900  ...   \n",
       "2             -0.802123          13.257764                     970  ...   \n",
       "3             -0.815843          12.497773                     760  ...   \n",
       "4             -1.335487          12.601461                     830  ...   \n",
       "\n",
       "   nb_3km_view_mean  nb_3km_view_median  nb_3km_view_std  nb_3km_view_skew  \\\n",
       "0          0.858586                 0.0         1.355338          1.291112   \n",
       "1          0.023077                 0.0         0.263117         11.401754   \n",
       "2          0.062500                 0.0         0.362207          6.609893   \n",
       "3          0.000000                 0.0         0.000000          0.000000   \n",
       "4          0.850746                 0.0         1.209229          1.143257   \n",
       "\n",
       "   nb_3km_condition_min  nb_3km_condition_max  nb_3km_condition_mean  \\\n",
       "0                     3                     5               3.454545   \n",
       "1                     3                     5               3.292308   \n",
       "2                     2                     5               3.205357   \n",
       "3                     2                     5               3.282609   \n",
       "4                     2                     5               3.477612   \n",
       "\n",
       "   nb_3km_condition_median  nb_3km_condition_std  nb_3km_condition_skew  \n",
       "0                      3.0              0.732242               1.274569  \n",
       "1                      3.0              0.520080               1.575772  \n",
       "2                      3.0              0.486547               1.898739  \n",
       "3                      3.0              0.544183               0.960641  \n",
       "4                      3.0              0.586676              -0.142971  \n",
       "\n",
       "[5 rows x 51 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "neighbor_3km = neighbor_info_df[(neighbor_info_df['data'] == 'train') & (neighbor_info_df['distance'] <= 1.5)].copy()\n",
    "neighbor_3km['neighbor_price_log'] = np.log1p(neighbor_3km['neighbor_price'])\n",
    "neighbor_3km_stat = neighbor_3km.groupby('id').agg({\n",
    "    'neighbor_id': 'count',\n",
    "    'distance': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_price_log': ['mean'],\n",
    "    'neighbor_sqft_living': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_sqft_lot': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_bedrooms': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_bathrooms': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_grade': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_view': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_condition': ['min','max','mean','median','std','skew'],\n",
    "}).reset_index()\n",
    "\n",
    "neighbor_3km_stat.columns = [\n",
    "    'id','neighbor_3km_count',\n",
    "    'nb_3km_distance_min','nb_3km_distance_max','nb_3km_distance_mean','nb_3km_distance_median','nb_3km_distance_std','nb_3km_distance_skew',\n",
    "    'nb_3km_price_mean',\n",
    "    'nb_3km_sqft_living_min','nb_3km_sqft_living_max','nb_3km_sqft_living_mean','nb_3km_sqft_living_median','nb_3km_sqft_living_std','nb_3km_sqft_living_skew',\n",
    "    'nb_3km_sqft_lot_min','nb_3km_sqft_lot_max','nb_3km_sqft_lot_mean','nb_3km_sqft_lot_median','nb_3km_sqft_lot_std','nb_3km_sqft_lot_skew',\n",
    "    'nb_3km_bedrooms_min','nb_3km_bedrooms_max','nb_3km_bedrooms_mean','nb_3km_bedrooms_median','nb_3km_bedrooms_std','nb_3km_bedrooms_skew',\n",
    "    'nb_3km_bathrooms_min','nb_3km_bathrooms_max','nb_3km_bathrooms_mean','nb_3km_bathrooms_median','nb_3km_bathrooms_std','nb_3km_bathrooms_skew',\n",
    "    'nb_3km_grade_min','nb_3km_grade_max','nb_3km_grade_mean','nb_3km_grade_median','nb_3km_grade_std','nb_3km_grade_skew',\n",
    "    'nb_3km_view_min','nb_3km_view_max','nb_3km_view_mean','nb_3km_view_median','nb_3km_view_std','nb_3km_view_skew',\n",
    "    'nb_3km_condition_min','nb_3km_condition_max','nb_3km_condition_mean','nb_3km_condition_median','nb_3km_condition_std','nb_3km_condition_skew',\n",
    "]\n",
    "\n",
    "print(neighbor_3km_stat.shape)\n",
    "neighbor_3km_stat.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "neighbor_3km_stat.to_csv('./neighbor_3km_stat.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3> 5km"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(21499, 51)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>neighbor_5km_count</th>\n",
       "      <th>nb_5km_distance_min</th>\n",
       "      <th>nb_5km_distance_max</th>\n",
       "      <th>nb_5km_distance_mean</th>\n",
       "      <th>nb_5km_distance_median</th>\n",
       "      <th>nb_5km_distance_std</th>\n",
       "      <th>nb_5km_distance_skew</th>\n",
       "      <th>nb_5km_price_mean</th>\n",
       "      <th>nb_5km_sqft_living_min</th>\n",
       "      <th>...</th>\n",
       "      <th>nb_5km_view_mean</th>\n",
       "      <th>nb_5km_view_median</th>\n",
       "      <th>nb_5km_view_std</th>\n",
       "      <th>nb_5km_view_skew</th>\n",
       "      <th>nb_5km_condition_min</th>\n",
       "      <th>nb_5km_condition_max</th>\n",
       "      <th>nb_5km_condition_mean</th>\n",
       "      <th>nb_5km_condition_median</th>\n",
       "      <th>nb_5km_condition_std</th>\n",
       "      <th>nb_5km_condition_skew</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>214</td>\n",
       "      <td>0.044478</td>\n",
       "      <td>2.498402</td>\n",
       "      <td>1.534700</td>\n",
       "      <td>1.574390</td>\n",
       "      <td>0.687077</td>\n",
       "      <td>-0.233898</td>\n",
       "      <td>12.563006</td>\n",
       "      <td>580</td>\n",
       "      <td>...</td>\n",
       "      <td>0.528037</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.124486</td>\n",
       "      <td>1.989276</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>3.415888</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.718586</td>\n",
       "      <td>1.256528</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>261</td>\n",
       "      <td>0.143364</td>\n",
       "      <td>2.496210</td>\n",
       "      <td>1.500443</td>\n",
       "      <td>1.500601</td>\n",
       "      <td>0.633758</td>\n",
       "      <td>-0.123546</td>\n",
       "      <td>13.020365</td>\n",
       "      <td>900</td>\n",
       "      <td>...</td>\n",
       "      <td>0.103448</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.548448</td>\n",
       "      <td>5.554957</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>3.329502</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.573997</td>\n",
       "      <td>1.434305</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>238</td>\n",
       "      <td>0.011119</td>\n",
       "      <td>2.453366</td>\n",
       "      <td>1.545230</td>\n",
       "      <td>1.539181</td>\n",
       "      <td>0.612509</td>\n",
       "      <td>-0.350608</td>\n",
       "      <td>13.355143</td>\n",
       "      <td>970</td>\n",
       "      <td>...</td>\n",
       "      <td>0.100840</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.557192</td>\n",
       "      <td>5.940347</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>3.134454</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.419451</td>\n",
       "      <td>2.225811</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>125</td>\n",
       "      <td>0.143684</td>\n",
       "      <td>2.492903</td>\n",
       "      <td>1.671696</td>\n",
       "      <td>1.764089</td>\n",
       "      <td>0.589492</td>\n",
       "      <td>-0.599710</td>\n",
       "      <td>12.479925</td>\n",
       "      <td>760</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>3.264000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.494225</td>\n",
       "      <td>0.863021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>126</td>\n",
       "      <td>0.266589</td>\n",
       "      <td>2.481930</td>\n",
       "      <td>1.514081</td>\n",
       "      <td>1.446386</td>\n",
       "      <td>0.473395</td>\n",
       "      <td>0.015201</td>\n",
       "      <td>12.547043</td>\n",
       "      <td>620</td>\n",
       "      <td>...</td>\n",
       "      <td>0.555556</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.047325</td>\n",
       "      <td>1.739851</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>3.428571</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.571714</td>\n",
       "      <td>0.415481</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 51 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   id  neighbor_5km_count  nb_5km_distance_min  nb_5km_distance_max  \\\n",
       "0   0                 214             0.044478             2.498402   \n",
       "1   1                 261             0.143364             2.496210   \n",
       "2   2                 238             0.011119             2.453366   \n",
       "3   3                 125             0.143684             2.492903   \n",
       "4   4                 126             0.266589             2.481930   \n",
       "\n",
       "   nb_5km_distance_mean  nb_5km_distance_median  nb_5km_distance_std  \\\n",
       "0              1.534700                1.574390             0.687077   \n",
       "1              1.500443                1.500601             0.633758   \n",
       "2              1.545230                1.539181             0.612509   \n",
       "3              1.671696                1.764089             0.589492   \n",
       "4              1.514081                1.446386             0.473395   \n",
       "\n",
       "   nb_5km_distance_skew  nb_5km_price_mean  nb_5km_sqft_living_min  ...  \\\n",
       "0             -0.233898          12.563006                     580  ...   \n",
       "1             -0.123546          13.020365                     900  ...   \n",
       "2             -0.350608          13.355143                     970  ...   \n",
       "3             -0.599710          12.479925                     760  ...   \n",
       "4              0.015201          12.547043                     620  ...   \n",
       "\n",
       "   nb_5km_view_mean  nb_5km_view_median  nb_5km_view_std  nb_5km_view_skew  \\\n",
       "0          0.528037                 0.0         1.124486          1.989276   \n",
       "1          0.103448                 0.0         0.548448          5.554957   \n",
       "2          0.100840                 0.0         0.557192          5.940347   \n",
       "3          0.000000                 0.0         0.000000          0.000000   \n",
       "4          0.555556                 0.0         1.047325          1.739851   \n",
       "\n",
       "   nb_5km_condition_min  nb_5km_condition_max  nb_5km_condition_mean  \\\n",
       "0                     2                     5               3.415888   \n",
       "1                     2                     5               3.329502   \n",
       "2                     2                     5               3.134454   \n",
       "3                     2                     5               3.264000   \n",
       "4                     2                     5               3.428571   \n",
       "\n",
       "   nb_5km_condition_median  nb_5km_condition_std  nb_5km_condition_skew  \n",
       "0                      3.0              0.718586               1.256528  \n",
       "1                      3.0              0.573997               1.434305  \n",
       "2                      3.0              0.419451               2.225811  \n",
       "3                      3.0              0.494225               0.863021  \n",
       "4                      3.0              0.571714               0.415481  \n",
       "\n",
       "[5 rows x 51 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "neighbor_5km = neighbor_info_df[(neighbor_info_df['data'] == 'train') & (neighbor_info_df['distance'] <= 2.5)].copy()\n",
    "neighbor_5km['neighbor_price_log'] = np.log1p(neighbor_5km['neighbor_price'])\n",
    "neighbor_5km_stat = neighbor_5km.groupby('id').agg({\n",
    "    'neighbor_id': 'count',\n",
    "    'distance': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_price_log': ['mean'],\n",
    "    'neighbor_sqft_living': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_sqft_lot': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_bedrooms': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_bathrooms': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_grade': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_view': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_condition': ['min','max','mean','median','std','skew'],\n",
    "}).reset_index()\n",
    "\n",
    "neighbor_5km_stat.columns = [\n",
    "    'id','neighbor_5km_count',\n",
    "    'nb_5km_distance_min','nb_5km_distance_max','nb_5km_distance_mean','nb_5km_distance_median','nb_5km_distance_std','nb_5km_distance_skew',\n",
    "    'nb_5km_price_mean',\n",
    "    'nb_5km_sqft_living_min','nb_5km_sqft_living_max','nb_5km_sqft_living_mean','nb_5km_sqft_living_median','nb_5km_sqft_living_std','nb_5km_sqft_living_skew',\n",
    "    'nb_5km_sqft_lot_min','nb_5km_sqft_lot_max','nb_5km_sqft_lot_mean','nb_5km_sqft_lot_median','nb_5km_sqft_lot_std','nb_5km_sqft_lot_skew',\n",
    "    'nb_5km_bedrooms_min','nb_5km_bedrooms_max','nb_5km_bedrooms_mean','nb_5km_bedrooms_median','nb_5km_bedrooms_std','nb_5km_bedrooms_skew',\n",
    "    'nb_5km_bathrooms_min','nb_5km_bathrooms_max','nb_5km_bathrooms_mean','nb_5km_bathrooms_median','nb_5km_bathrooms_std','nb_5km_bathrooms_skew',\n",
    "    'nb_5km_grade_min','nb_5km_grade_max','nb_5km_grade_mean','nb_5km_grade_median','nb_5km_grade_std','nb_5km_grade_skew',\n",
    "    'nb_5km_view_min','nb_5km_view_max','nb_5km_view_mean','nb_5km_view_median','nb_5km_view_std','nb_5km_view_skew',\n",
    "    'nb_5km_condition_min','nb_5km_condition_max','nb_5km_condition_mean','nb_5km_condition_median','nb_5km_condition_std','nb_5km_condition_skew',\n",
    "]\n",
    "\n",
    "print(neighbor_5km_stat.shape)\n",
    "neighbor_5km_stat.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "neighbor_5km_stat.to_csv('./neighbor_5km_stat.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4> 가까운 순으로 정렬"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(11114962, 37)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>neighbor_id</th>\n",
       "      <th>distance</th>\n",
       "      <th>neighbor_sqft_living</th>\n",
       "      <th>neighbor_sqft_living15</th>\n",
       "      <th>neighbor_sqft_lot</th>\n",
       "      <th>neighbor_sqft_lot15</th>\n",
       "      <th>neighbor_bedrooms</th>\n",
       "      <th>neighbor_bathrooms</th>\n",
       "      <th>neighbor_grade</th>\n",
       "      <th>...</th>\n",
       "      <th>sqft_living15_diff</th>\n",
       "      <th>sqft_lot_diff</th>\n",
       "      <th>sqft_lot15_diff</th>\n",
       "      <th>bedrooms_diff</th>\n",
       "      <th>bathrooms_diff</th>\n",
       "      <th>grade_diff</th>\n",
       "      <th>waterfront_diff</th>\n",
       "      <th>view_diff</th>\n",
       "      <th>condition_diff</th>\n",
       "      <th>nb_order</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>170</td>\n",
       "      <td>0</td>\n",
       "      <td>5596</td>\n",
       "      <td>1.844594</td>\n",
       "      <td>1190</td>\n",
       "      <td>1200</td>\n",
       "      <td>6000</td>\n",
       "      <td>6000</td>\n",
       "      <td>3</td>\n",
       "      <td>1.75</td>\n",
       "      <td>7</td>\n",
       "      <td>...</td>\n",
       "      <td>140</td>\n",
       "      <td>350</td>\n",
       "      <td>350</td>\n",
       "      <td>0</td>\n",
       "      <td>0.75</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>323</td>\n",
       "      <td>0</td>\n",
       "      <td>10207</td>\n",
       "      <td>2.406229</td>\n",
       "      <td>1190</td>\n",
       "      <td>1190</td>\n",
       "      <td>3000</td>\n",
       "      <td>3000</td>\n",
       "      <td>3</td>\n",
       "      <td>2.50</td>\n",
       "      <td>7</td>\n",
       "      <td>...</td>\n",
       "      <td>150</td>\n",
       "      <td>2650</td>\n",
       "      <td>2650</td>\n",
       "      <td>0</td>\n",
       "      <td>1.50</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>397</td>\n",
       "      <td>0</td>\n",
       "      <td>12489</td>\n",
       "      <td>2.036385</td>\n",
       "      <td>1200</td>\n",
       "      <td>1380</td>\n",
       "      <td>10703</td>\n",
       "      <td>8068</td>\n",
       "      <td>3</td>\n",
       "      <td>1.00</td>\n",
       "      <td>7</td>\n",
       "      <td>...</td>\n",
       "      <td>40</td>\n",
       "      <td>5053</td>\n",
       "      <td>2418</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>212</td>\n",
       "      <td>0</td>\n",
       "      <td>6589</td>\n",
       "      <td>1.442439</td>\n",
       "      <td>1200</td>\n",
       "      <td>1190</td>\n",
       "      <td>5700</td>\n",
       "      <td>6384</td>\n",
       "      <td>3</td>\n",
       "      <td>2.00</td>\n",
       "      <td>7</td>\n",
       "      <td>...</td>\n",
       "      <td>150</td>\n",
       "      <td>50</td>\n",
       "      <td>734</td>\n",
       "      <td>0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>94</td>\n",
       "      <td>0</td>\n",
       "      <td>2906</td>\n",
       "      <td>3.723943</td>\n",
       "      <td>1160</td>\n",
       "      <td>1160</td>\n",
       "      <td>8906</td>\n",
       "      <td>8906</td>\n",
       "      <td>3</td>\n",
       "      <td>1.50</td>\n",
       "      <td>7</td>\n",
       "      <td>...</td>\n",
       "      <td>180</td>\n",
       "      <td>3256</td>\n",
       "      <td>3256</td>\n",
       "      <td>0</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 37 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     id  neighbor_id  distance  neighbor_sqft_living  neighbor_sqft_living15  \\\n",
       "170   0         5596  1.844594                  1190                    1200   \n",
       "323   0        10207  2.406229                  1190                    1190   \n",
       "397   0        12489  2.036385                  1200                    1380   \n",
       "212   0         6589  1.442439                  1200                    1190   \n",
       "94    0         2906  3.723943                  1160                    1160   \n",
       "\n",
       "     neighbor_sqft_lot  neighbor_sqft_lot15  neighbor_bedrooms  \\\n",
       "170               6000                 6000                  3   \n",
       "323               3000                 3000                  3   \n",
       "397              10703                 8068                  3   \n",
       "212               5700                 6384                  3   \n",
       "94                8906                 8906                  3   \n",
       "\n",
       "     neighbor_bathrooms  neighbor_grade  ...  sqft_living15_diff  \\\n",
       "170                1.75               7  ...                 140   \n",
       "323                2.50               7  ...                 150   \n",
       "397                1.00               7  ...                  40   \n",
       "212                2.00               7  ...                 150   \n",
       "94                 1.50               7  ...                 180   \n",
       "\n",
       "     sqft_lot_diff  sqft_lot15_diff bedrooms_diff  bathrooms_diff  grade_diff  \\\n",
       "170            350              350             0            0.75           0   \n",
       "323           2650             2650             0            1.50           0   \n",
       "397           5053             2418             0            0.00           0   \n",
       "212             50              734             0            1.00           0   \n",
       "94            3256             3256             0            0.50           0   \n",
       "\n",
       "     waterfront_diff  view_diff  condition_diff  nb_order  \n",
       "170                0          0               0         1  \n",
       "323                0          0               0         2  \n",
       "397                0          0               1         3  \n",
       "212                0          0               2         4  \n",
       "94                 0          0               0         5  \n",
       "\n",
       "[5 rows x 37 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nearest_neighbor = neighbor_info_df[(neighbor_info_df['data'] == 'train') & (neighbor_info_df['distance'] <= 4)].copy()\n",
    "nearest_neighbor = nearest_neighbor.sort_values(['id','grade_diff','sqft_living_diff','sqft_living15_diff',\n",
    "                                                 'bathrooms_diff','distance','bedrooms_diff','view_diff','sqft_lot_diff',\n",
    "                                                 'condition_diff','waterfront_diff'])\n",
    "nearest_neighbor['nb_order'] = nearest_neighbor.groupby(['id']).cumcount() + 1\n",
    "print(nearest_neighbor.shape)\n",
    "nearest_neighbor.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "--------\n",
    "\n",
    "## 4) near neighborhood\n",
    "\n",
    "### 1> 5명"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(21499, 51)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>n_5_nb_count</th>\n",
       "      <th>n_5_nb_distance_min</th>\n",
       "      <th>n_5_nb_distance_max</th>\n",
       "      <th>n_5_nb_distance_mean</th>\n",
       "      <th>n_5_nb_distance_median</th>\n",
       "      <th>n_5_nb_distance_std</th>\n",
       "      <th>n_5_nb_distance_skew</th>\n",
       "      <th>n_5_nb_price_mean</th>\n",
       "      <th>n_5_nb_sqft_living_min</th>\n",
       "      <th>...</th>\n",
       "      <th>n_5_nb_view_mean</th>\n",
       "      <th>n_5_nb_view_median</th>\n",
       "      <th>n_5_nb_view_std</th>\n",
       "      <th>n_5_nb_view_skew</th>\n",
       "      <th>n_5_nb_condition_min</th>\n",
       "      <th>n_5_nb_condition_max</th>\n",
       "      <th>n_5_nb_condition_mean</th>\n",
       "      <th>n_5_nb_condition_median</th>\n",
       "      <th>n_5_nb_condition_std</th>\n",
       "      <th>n_5_nb_condition_skew</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>1.442439</td>\n",
       "      <td>3.723943</td>\n",
       "      <td>2.290718</td>\n",
       "      <td>2.036385</td>\n",
       "      <td>0.873322</td>\n",
       "      <td>1.394946</td>\n",
       "      <td>12.352019</td>\n",
       "      <td>1160</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>3.2</td>\n",
       "      <td>3</td>\n",
       "      <td>1.095445</td>\n",
       "      <td>1.293234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>2.892035</td>\n",
       "      <td>3.940790</td>\n",
       "      <td>3.302202</td>\n",
       "      <td>2.938630</td>\n",
       "      <td>0.523212</td>\n",
       "      <td>0.641529</td>\n",
       "      <td>12.571700</td>\n",
       "      <td>720</td>\n",
       "      <td>...</td>\n",
       "      <td>0.2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.447214</td>\n",
       "      <td>2.236068</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>3.6</td>\n",
       "      <td>3</td>\n",
       "      <td>0.894427</td>\n",
       "      <td>1.257788</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>0.011119</td>\n",
       "      <td>2.888241</td>\n",
       "      <td>1.317127</td>\n",
       "      <td>0.716387</td>\n",
       "      <td>1.456780</td>\n",
       "      <td>0.458963</td>\n",
       "      <td>13.141876</td>\n",
       "      <td>1650</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>3.2</td>\n",
       "      <td>3</td>\n",
       "      <td>0.447214</td>\n",
       "      <td>2.236068</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>1.496205</td>\n",
       "      <td>3.991923</td>\n",
       "      <td>3.361471</td>\n",
       "      <td>3.830455</td>\n",
       "      <td>1.050084</td>\n",
       "      <td>-2.158978</td>\n",
       "      <td>12.336043</td>\n",
       "      <td>1700</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>3.8</td>\n",
       "      <td>4</td>\n",
       "      <td>0.447214</td>\n",
       "      <td>-2.236068</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>0.844913</td>\n",
       "      <td>3.815175</td>\n",
       "      <td>2.300733</td>\n",
       "      <td>1.842967</td>\n",
       "      <td>1.425978</td>\n",
       "      <td>0.339473</td>\n",
       "      <td>12.271680</td>\n",
       "      <td>1030</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>3.6</td>\n",
       "      <td>4</td>\n",
       "      <td>0.547723</td>\n",
       "      <td>-0.608581</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 51 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   id  n_5_nb_count  n_5_nb_distance_min  n_5_nb_distance_max  \\\n",
       "0   0             5             1.442439             3.723943   \n",
       "1   1             5             2.892035             3.940790   \n",
       "2   2             5             0.011119             2.888241   \n",
       "3   3             5             1.496205             3.991923   \n",
       "4   4             5             0.844913             3.815175   \n",
       "\n",
       "   n_5_nb_distance_mean  n_5_nb_distance_median  n_5_nb_distance_std  \\\n",
       "0              2.290718                2.036385             0.873322   \n",
       "1              3.302202                2.938630             0.523212   \n",
       "2              1.317127                0.716387             1.456780   \n",
       "3              3.361471                3.830455             1.050084   \n",
       "4              2.300733                1.842967             1.425978   \n",
       "\n",
       "   n_5_nb_distance_skew  n_5_nb_price_mean  n_5_nb_sqft_living_min  ...  \\\n",
       "0              1.394946          12.352019                    1160  ...   \n",
       "1              0.641529          12.571700                     720  ...   \n",
       "2              0.458963          13.141876                    1650  ...   \n",
       "3             -2.158978          12.336043                    1700  ...   \n",
       "4              0.339473          12.271680                    1030  ...   \n",
       "\n",
       "   n_5_nb_view_mean  n_5_nb_view_median  n_5_nb_view_std  n_5_nb_view_skew  \\\n",
       "0               0.0                   0         0.000000          0.000000   \n",
       "1               0.2                   0         0.447214          2.236068   \n",
       "2               0.0                   0         0.000000          0.000000   \n",
       "3               0.0                   0         0.000000          0.000000   \n",
       "4               0.0                   0         0.000000          0.000000   \n",
       "\n",
       "   n_5_nb_condition_min  n_5_nb_condition_max  n_5_nb_condition_mean  \\\n",
       "0                     2                     5                    3.2   \n",
       "1                     3                     5                    3.6   \n",
       "2                     3                     4                    3.2   \n",
       "3                     3                     4                    3.8   \n",
       "4                     3                     4                    3.6   \n",
       "\n",
       "   n_5_nb_condition_median  n_5_nb_condition_std  n_5_nb_condition_skew  \n",
       "0                        3              1.095445               1.293234  \n",
       "1                        3              0.894427               1.257788  \n",
       "2                        3              0.447214               2.236068  \n",
       "3                        4              0.447214              -2.236068  \n",
       "4                        4              0.547723              -0.608581  \n",
       "\n",
       "[5 rows x 51 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nearest_5_neighbor = nearest_neighbor[nearest_neighbor['nb_order'] <= 5].reset_index(drop=True).copy()\n",
    "nearest_5_neighbor['neighbor_price_log'] = np.log1p(nearest_5_neighbor['neighbor_price'])\n",
    "\n",
    "nearest_5_neighbor_stat = nearest_5_neighbor.groupby('id').agg({\n",
    "    'neighbor_id': 'count',\n",
    "    'distance': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_price_log': ['mean'],\n",
    "    'neighbor_sqft_living': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_sqft_lot': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_bedrooms': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_bathrooms': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_grade': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_view': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_condition': ['min','max','mean','median','std','skew'],\n",
    "}).reset_index()\n",
    "\n",
    "nearest_5_neighbor_stat.columns = [\n",
    "    'id','n_5_nb_count',\n",
    "    'n_5_nb_distance_min','n_5_nb_distance_max','n_5_nb_distance_mean','n_5_nb_distance_median','n_5_nb_distance_std','n_5_nb_distance_skew',\n",
    "    'n_5_nb_price_mean',\n",
    "    'n_5_nb_sqft_living_min','n_5_nb_sqft_living_max','n_5_nb_sqft_living_mean','n_5_nb_sqft_living_median','n_5_nb_sqft_living_std','n_5_nb_sqft_living_skew',\n",
    "    'n_5_nb_sqft_lot_min','n_5_nb_sqft_lot_max','n_5_nb_sqft_lot_mean','n_5_nb_sqft_lot_median','n_5_nb_sqft_lot_std','n_5_nb_sqft_lot_skew',\n",
    "    'n_5_nb_bedrooms_min','n_5_nb_bedrooms_max','n_5_nb_bedrooms_mean','n_5_nb_bedrooms_median','n_5_nb_bedrooms_std','n_5_nb_bedrooms_skew',\n",
    "    'n_5_nb_bathrooms_min','n_5_nb_bathrooms_max','n_5_nb_bathrooms_mean','n_5_nb_bathrooms_median','n_5_nb_bathrooms_std','n_5_nb_bathrooms_skew',\n",
    "    'n_5_nb_grade_min','n_5_nb_grade_max','n_5_nb_grade_mean','n_5_nb_grade_median','n_5_nb_grade_std','n_5_nb_grade_skew',\n",
    "    'n_5_nb_view_min','n_5_nb_view_max','n_5_nb_view_mean','n_5_nb_view_median','n_5_nb_view_std','n_5_nb_view_skew',\n",
    "    'n_5_nb_condition_min','n_5_nb_condition_max','n_5_nb_condition_mean','n_5_nb_condition_median','n_5_nb_condition_std','n_5_nb_condition_skew',\n",
    "]\n",
    "\n",
    "print(nearest_5_neighbor_stat.shape)\n",
    "nearest_5_neighbor_stat.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "nearest_5_neighbor_stat.to_csv('./nearest_5_neighbor_stat.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2> 10명"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(21499, 51)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>n_10_nb_count</th>\n",
       "      <th>n_10_nb_distance_min</th>\n",
       "      <th>n_10_nb_distance_max</th>\n",
       "      <th>n_10_nb_distance_mean</th>\n",
       "      <th>n_10_nb_distance_median</th>\n",
       "      <th>n_10_nb_distance_std</th>\n",
       "      <th>n_10_nb_distance_skew</th>\n",
       "      <th>n_10_nb_price_mean</th>\n",
       "      <th>n_10_nb_sqft_living_min</th>\n",
       "      <th>...</th>\n",
       "      <th>n_10_nb_view_mean</th>\n",
       "      <th>n_10_nb_view_median</th>\n",
       "      <th>n_10_nb_view_std</th>\n",
       "      <th>n_10_nb_view_skew</th>\n",
       "      <th>n_10_nb_condition_min</th>\n",
       "      <th>n_10_nb_condition_max</th>\n",
       "      <th>n_10_nb_condition_mean</th>\n",
       "      <th>n_10_nb_condition_median</th>\n",
       "      <th>n_10_nb_condition_std</th>\n",
       "      <th>n_10_nb_condition_skew</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>0.796354</td>\n",
       "      <td>3.723943</td>\n",
       "      <td>2.135051</td>\n",
       "      <td>1.940489</td>\n",
       "      <td>1.003249</td>\n",
       "      <td>0.405869</td>\n",
       "      <td>12.513181</td>\n",
       "      <td>1150</td>\n",
       "      <td>...</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.316228</td>\n",
       "      <td>3.162278</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>3.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.971825</td>\n",
       "      <td>0.453967</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>1.092273</td>\n",
       "      <td>3.940790</td>\n",
       "      <td>2.671965</td>\n",
       "      <td>2.913636</td>\n",
       "      <td>0.967351</td>\n",
       "      <td>-0.670233</td>\n",
       "      <td>12.617929</td>\n",
       "      <td>720</td>\n",
       "      <td>...</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.316228</td>\n",
       "      <td>3.162278</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>3.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.269296</td>\n",
       "      <td>-0.407503</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>0.011119</td>\n",
       "      <td>3.210191</td>\n",
       "      <td>1.619002</td>\n",
       "      <td>1.641091</td>\n",
       "      <td>1.339702</td>\n",
       "      <td>-0.065872</td>\n",
       "      <td>13.127432</td>\n",
       "      <td>1570</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>3.1</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.316228</td>\n",
       "      <td>3.162278</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>1.496205</td>\n",
       "      <td>3.991923</td>\n",
       "      <td>3.220352</td>\n",
       "      <td>3.663118</td>\n",
       "      <td>0.907046</td>\n",
       "      <td>-1.176268</td>\n",
       "      <td>12.350689</td>\n",
       "      <td>1680</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>3.7</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.483046</td>\n",
       "      <td>-1.035098</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>0.844913</td>\n",
       "      <td>3.878557</td>\n",
       "      <td>2.484469</td>\n",
       "      <td>2.534432</td>\n",
       "      <td>1.304528</td>\n",
       "      <td>-0.088722</td>\n",
       "      <td>12.273037</td>\n",
       "      <td>990</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>3.5</td>\n",
       "      <td>3.5</td>\n",
       "      <td>0.527046</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 51 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   id  n_10_nb_count  n_10_nb_distance_min  n_10_nb_distance_max  \\\n",
       "0   0             10              0.796354              3.723943   \n",
       "1   1             10              1.092273              3.940790   \n",
       "2   2             10              0.011119              3.210191   \n",
       "3   3             10              1.496205              3.991923   \n",
       "4   4             10              0.844913              3.878557   \n",
       "\n",
       "   n_10_nb_distance_mean  n_10_nb_distance_median  n_10_nb_distance_std  \\\n",
       "0               2.135051                 1.940489              1.003249   \n",
       "1               2.671965                 2.913636              0.967351   \n",
       "2               1.619002                 1.641091              1.339702   \n",
       "3               3.220352                 3.663118              0.907046   \n",
       "4               2.484469                 2.534432              1.304528   \n",
       "\n",
       "   n_10_nb_distance_skew  n_10_nb_price_mean  n_10_nb_sqft_living_min  ...  \\\n",
       "0               0.405869           12.513181                     1150  ...   \n",
       "1              -0.670233           12.617929                      720  ...   \n",
       "2              -0.065872           13.127432                     1570  ...   \n",
       "3              -1.176268           12.350689                     1680  ...   \n",
       "4              -0.088722           12.273037                      990  ...   \n",
       "\n",
       "   n_10_nb_view_mean  n_10_nb_view_median  n_10_nb_view_std  \\\n",
       "0                0.1                  0.0          0.316228   \n",
       "1                0.1                  0.0          0.316228   \n",
       "2                0.0                  0.0          0.000000   \n",
       "3                0.0                  0.0          0.000000   \n",
       "4                0.0                  0.0          0.000000   \n",
       "\n",
       "   n_10_nb_view_skew  n_10_nb_condition_min  n_10_nb_condition_max  \\\n",
       "0           3.162278                      2                      5   \n",
       "1           3.162278                      1                      5   \n",
       "2           0.000000                      3                      4   \n",
       "3           0.000000                      3                      4   \n",
       "4           0.000000                      3                      4   \n",
       "\n",
       "   n_10_nb_condition_mean  n_10_nb_condition_median  n_10_nb_condition_std  \\\n",
       "0                     3.5                       3.0               0.971825   \n",
       "1                     3.5                       3.0               1.269296   \n",
       "2                     3.1                       3.0               0.316228   \n",
       "3                     3.7                       4.0               0.483046   \n",
       "4                     3.5                       3.5               0.527046   \n",
       "\n",
       "   n_10_nb_condition_skew  \n",
       "0                0.453967  \n",
       "1               -0.407503  \n",
       "2                3.162278  \n",
       "3               -1.035098  \n",
       "4                0.000000  \n",
       "\n",
       "[5 rows x 51 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "nearest_10_neighbor = nearest_neighbor[nearest_neighbor['nb_order'] <= 10].reset_index(drop=True).copy()\n",
    "nearest_10_neighbor['neighbor_price_log'] = np.log1p(nearest_10_neighbor['neighbor_price'])\n",
    "\n",
    "nearest_10_neighbor_stat = nearest_10_neighbor.groupby('id').agg({\n",
    "    'neighbor_id': 'count',\n",
    "    'distance': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_price_log': ['mean'],\n",
    "    'neighbor_sqft_living': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_sqft_lot': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_bedrooms': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_bathrooms': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_grade': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_view': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_condition': ['min','max','mean','median','std','skew'],\n",
    "}).reset_index()\n",
    "\n",
    "nearest_10_neighbor_stat.columns = [\n",
    "    'id','n_10_nb_count',\n",
    "    'n_10_nb_distance_min','n_10_nb_distance_max','n_10_nb_distance_mean','n_10_nb_distance_median','n_10_nb_distance_std','n_10_nb_distance_skew',\n",
    "    'n_10_nb_price_mean',\n",
    "    'n_10_nb_sqft_living_min','n_10_nb_sqft_living_max','n_10_nb_sqft_living_mean','n_10_nb_sqft_living_median','n_10_nb_sqft_living_std','n_10_nb_sqft_living_skew',\n",
    "    'n_10_nb_sqft_lot_min','n_10_nb_sqft_lot_max','n_10_nb_sqft_lot_mean','n_10_nb_sqft_lot_median','n_10_nb_sqft_lot_std','n_10_nb_sqft_lot_skew',\n",
    "    'n_10_nb_bedrooms_min','n_10_nb_bedrooms_max','n_10_nb_bedrooms_mean','n_10_nb_bedrooms_median','n_10_nb_bedrooms_std','n_10_nb_bedrooms_skew',\n",
    "    'n_10_nb_bathrooms_min','n_10_nb_bathrooms_max','n_10_nb_bathrooms_mean','n_10_nb_bathrooms_median','n_10_nb_bathrooms_std','n_10_nb_bathrooms_skew',\n",
    "    'n_10_nb_grade_min','n_10_nb_grade_max','n_10_nb_grade_mean','n_10_nb_grade_median','n_10_nb_grade_std','n_10_nb_grade_skew',\n",
    "    'n_10_nb_view_min','n_10_nb_view_max','n_10_nb_view_mean','n_10_nb_view_median','n_10_nb_view_std','n_10_nb_view_skew',\n",
    "    'n_10_nb_condition_min','n_10_nb_condition_max','n_10_nb_condition_mean','n_10_nb_condition_median','n_10_nb_condition_std','n_10_nb_condition_skew',\n",
    "]\n",
    "\n",
    "print(nearest_10_neighbor_stat.shape)\n",
    "nearest_10_neighbor_stat.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "nearest_10_neighbor_stat.to_csv('./nearest_10_neighbor_stat.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3> 20명"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(21499, 51)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>n_20_nb_count</th>\n",
       "      <th>n_20_nb_distance_min</th>\n",
       "      <th>n_20_nb_distance_max</th>\n",
       "      <th>n_20_nb_distance_mean</th>\n",
       "      <th>n_20_nb_distance_median</th>\n",
       "      <th>n_20_nb_distance_std</th>\n",
       "      <th>n_20_nb_distance_skew</th>\n",
       "      <th>n_20_nb_price_mean</th>\n",
       "      <th>n_20_nb_sqft_living_min</th>\n",
       "      <th>...</th>\n",
       "      <th>n_20_nb_view_mean</th>\n",
       "      <th>n_20_nb_view_median</th>\n",
       "      <th>n_20_nb_view_std</th>\n",
       "      <th>n_20_nb_view_skew</th>\n",
       "      <th>n_20_nb_condition_min</th>\n",
       "      <th>n_20_nb_condition_max</th>\n",
       "      <th>n_20_nb_condition_mean</th>\n",
       "      <th>n_20_nb_condition_median</th>\n",
       "      <th>n_20_nb_condition_std</th>\n",
       "      <th>n_20_nb_condition_skew</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>20</td>\n",
       "      <td>0.796354</td>\n",
       "      <td>3.850510</td>\n",
       "      <td>2.156078</td>\n",
       "      <td>2.193127</td>\n",
       "      <td>1.048052</td>\n",
       "      <td>0.188513</td>\n",
       "      <td>12.478504</td>\n",
       "      <td>1130</td>\n",
       "      <td>...</td>\n",
       "      <td>0.30</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.801315</td>\n",
       "      <td>2.782313</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>3.35</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.745160</td>\n",
       "      <td>0.998545</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>0.782227</td>\n",
       "      <td>3.940790</td>\n",
       "      <td>2.489475</td>\n",
       "      <td>2.872964</td>\n",
       "      <td>1.006128</td>\n",
       "      <td>-0.440201</td>\n",
       "      <td>12.655155</td>\n",
       "      <td>720</td>\n",
       "      <td>...</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.223607</td>\n",
       "      <td>4.472136</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>3.65</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.988087</td>\n",
       "      <td>-0.646516</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>0.011119</td>\n",
       "      <td>3.766026</td>\n",
       "      <td>1.930569</td>\n",
       "      <td>2.409197</td>\n",
       "      <td>1.330406</td>\n",
       "      <td>-0.209348</td>\n",
       "      <td>13.125657</td>\n",
       "      <td>1520</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>3.05</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.394034</td>\n",
       "      <td>0.530511</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>20</td>\n",
       "      <td>0.288030</td>\n",
       "      <td>3.991923</td>\n",
       "      <td>2.875880</td>\n",
       "      <td>2.859184</td>\n",
       "      <td>0.962760</td>\n",
       "      <td>-1.006115</td>\n",
       "      <td>12.377315</td>\n",
       "      <td>1640</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>3.55</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.510418</td>\n",
       "      <td>-0.217687</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>0.844913</td>\n",
       "      <td>3.987179</td>\n",
       "      <td>2.763103</td>\n",
       "      <td>3.232686</td>\n",
       "      <td>1.089569</td>\n",
       "      <td>-0.614915</td>\n",
       "      <td>12.268908</td>\n",
       "      <td>940</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>3.45</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.686333</td>\n",
       "      <td>0.198068</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 51 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   id  n_20_nb_count  n_20_nb_distance_min  n_20_nb_distance_max  \\\n",
       "0   0             20              0.796354              3.850510   \n",
       "1   1             20              0.782227              3.940790   \n",
       "2   2             20              0.011119              3.766026   \n",
       "3   3             20              0.288030              3.991923   \n",
       "4   4             20              0.844913              3.987179   \n",
       "\n",
       "   n_20_nb_distance_mean  n_20_nb_distance_median  n_20_nb_distance_std  \\\n",
       "0               2.156078                 2.193127              1.048052   \n",
       "1               2.489475                 2.872964              1.006128   \n",
       "2               1.930569                 2.409197              1.330406   \n",
       "3               2.875880                 2.859184              0.962760   \n",
       "4               2.763103                 3.232686              1.089569   \n",
       "\n",
       "   n_20_nb_distance_skew  n_20_nb_price_mean  n_20_nb_sqft_living_min  ...  \\\n",
       "0               0.188513           12.478504                     1130  ...   \n",
       "1              -0.440201           12.655155                      720  ...   \n",
       "2              -0.209348           13.125657                     1520  ...   \n",
       "3              -1.006115           12.377315                     1640  ...   \n",
       "4              -0.614915           12.268908                      940  ...   \n",
       "\n",
       "   n_20_nb_view_mean  n_20_nb_view_median  n_20_nb_view_std  \\\n",
       "0               0.30                  0.0          0.801315   \n",
       "1               0.05                  0.0          0.223607   \n",
       "2               0.00                  0.0          0.000000   \n",
       "3               0.00                  0.0          0.000000   \n",
       "4               0.00                  0.0          0.000000   \n",
       "\n",
       "   n_20_nb_view_skew  n_20_nb_condition_min  n_20_nb_condition_max  \\\n",
       "0           2.782313                      2                      5   \n",
       "1           4.472136                      1                      5   \n",
       "2           0.000000                      2                      4   \n",
       "3           0.000000                      3                      4   \n",
       "4           0.000000                      2                      5   \n",
       "\n",
       "   n_20_nb_condition_mean  n_20_nb_condition_median  n_20_nb_condition_std  \\\n",
       "0                    3.35                       3.0               0.745160   \n",
       "1                    3.65                       4.0               0.988087   \n",
       "2                    3.05                       3.0               0.394034   \n",
       "3                    3.55                       4.0               0.510418   \n",
       "4                    3.45                       3.0               0.686333   \n",
       "\n",
       "   n_20_nb_condition_skew  \n",
       "0                0.998545  \n",
       "1               -0.646516  \n",
       "2                0.530511  \n",
       "3               -0.217687  \n",
       "4                0.198068  \n",
       "\n",
       "[5 rows x 51 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nearest_20_neighbor = nearest_neighbor[nearest_neighbor['nb_order'] <= 20].reset_index(drop=True).copy()\n",
    "nearest_20_neighbor['neighbor_price_log'] = np.log1p(nearest_20_neighbor['neighbor_price'])\n",
    "\n",
    "nearest_20_neighbor_stat = nearest_20_neighbor.groupby('id').agg({\n",
    "    'neighbor_id': 'count',\n",
    "    'distance': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_price_log': ['mean'],\n",
    "    'neighbor_sqft_living': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_sqft_lot': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_bedrooms': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_bathrooms': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_grade': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_view': ['min','max','mean','median','std','skew'],\n",
    "    'neighbor_condition': ['min','max','mean','median','std','skew'],\n",
    "}).reset_index()\n",
    "\n",
    "nearest_20_neighbor_stat.columns = [\n",
    "    'id','n_20_nb_count',\n",
    "    'n_20_nb_distance_min','n_20_nb_distance_max','n_20_nb_distance_mean','n_20_nb_distance_median','n_20_nb_distance_std','n_20_nb_distance_skew',\n",
    "    'n_20_nb_price_mean',\n",
    "    'n_20_nb_sqft_living_min','n_20_nb_sqft_living_max','n_20_nb_sqft_living_mean','n_20_nb_sqft_living_median','n_20_nb_sqft_living_std','n_20_nb_sqft_living_skew',\n",
    "    'n_20_nb_sqft_lot_min','n_20_nb_sqft_lot_max','n_20_nb_sqft_lot_mean','n_20_nb_sqft_lot_median','n_20_nb_sqft_lot_std','n_20_nb_sqft_lot_skew',\n",
    "    'n_20_nb_bedrooms_min','n_20_nb_bedrooms_max','n_20_nb_bedrooms_mean','n_20_nb_bedrooms_median','n_20_nb_bedrooms_std','n_20_nb_bedrooms_skew',\n",
    "    'n_20_nb_bathrooms_min','n_20_nb_bathrooms_max','n_20_nb_bathrooms_mean','n_20_nb_bathrooms_median','n_20_nb_bathrooms_std','n_20_nb_bathrooms_skew',\n",
    "    'n_20_nb_grade_min','n_20_nb_grade_max','n_20_nb_grade_mean','n_20_nb_grade_median','n_20_nb_grade_std','n_20_nb_grade_skew',\n",
    "    'n_20_nb_view_min','n_20_nb_view_max','n_20_nb_view_mean','n_20_nb_view_median','n_20_nb_view_std','n_20_nb_view_skew',\n",
    "    'n_20_nb_condition_min','n_20_nb_condition_max','n_20_nb_condition_mean','n_20_nb_condition_median','n_20_nb_condition_std','n_20_nb_condition_skew',\n",
    "]\n",
    "\n",
    "print(nearest_20_neighbor_stat.shape)\n",
    "nearest_20_neighbor_stat.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "nearest_20_neighbor_stat.to_csv('./nearest_20_neighbor_stat.csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
